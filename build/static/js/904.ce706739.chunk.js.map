{"version":3,"file":"static/js/904.ce706739.chunk.js","mappings":"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","sources":["api/diaryApi.js","components/FullButton.js","components/TitleDivisionLine.js","components/diary/DiaryDetailTitle.js","components/diary/TitleUserName.js","components/modal/ConfirmModal.js","components/diary/DiaryEdit.js","pages/member/mypage/diary/DiaryEditPage.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const baseUrl = process.env.REACT_APP_BASE_URL;\r\n\r\n// 사진 조회\r\nexport async function getDiaryFile(diaryNo) {\r\n    const res = await axios.get(`${baseUrl}/diary/img/DIARY`, {\r\n        params: { diaryNo: diaryNo },\r\n    });\r\n    return res.data;\r\n}\r\n// 사진 등록\r\nexport async function diaryAddFile(fileObj) {\r\n    const header = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n\r\n    const res = await axios.post(\r\n        `${baseUrl}/diary/registFile`,\r\n        fileObj,\r\n        header,\r\n    );\r\n    return res.data;\r\n}\r\n// 사진 삭제\r\nexport async function diarydeleteFile(diaryNo, fileName) {\r\n    const res = await axios.delete(\r\n        `${baseUrl}/diary/deleteImage/DIARY/${diaryNo}/${fileName}`,\r\n    );\r\n    return res.data;\r\n}\r\n","export default function FullButton({ name, onClick }) {\r\n    const buttonStyle = {\r\n        width: '100%',\r\n        height: '3em',\r\n    };\r\n    return (\r\n        <>\r\n            <button\r\n                type=\"button\"\r\n                style={buttonStyle}\r\n                class=\"rounded-md bg-[#80BCBD] px-2.5 py-1.5 text-sm font-semibold text-white shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-[#4F6F52]\"\r\n                onClick={onClick}\r\n            >\r\n                {name}\r\n            </button>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Division = styled.div`\r\n  border-top: 0.2rem solid #90c8ac;\r\n`;\r\n\r\nexport default function TitleDivisionLine() {\r\n  return (\r\n    <>\r\n      <Division></Division>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FaCircle } from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport TitleUserName from '../../components/diary/TitleUserName';\r\nimport TitleDivisionLine from '../TitleDivisionLine';\r\n\r\nconst FlexRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: auto 0.2rem 0.3rem auto;\r\n`;\r\nconst FontSize = styled.div`\r\n    font-size: 0.8em;\r\n`;\r\n\r\nexport default function DiaryDetailTitle({ memberNo, cropNo, baseUrl }) {\r\n    const image = {\r\n        margin: 'auto 0.1rem',\r\n        width: '30%',\r\n    };\r\n\r\n    const [cropData, setCropData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        cropInfoData();\r\n    }, [memberNo, cropNo]);\r\n\r\n    const cropInfoData = () => {\r\n        axios\r\n            .get(`${baseUrl}/calendar/crop/crop-info`, {\r\n                params: {\r\n                    memberNo: memberNo,\r\n                    cropNo: cropNo,\r\n                },\r\n                withCredentials: true,\r\n            })\r\n            .then((res) => {\r\n                setCropData(res.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    return (\r\n        <>\r\n            {Array.isArray(cropData) &&\r\n                cropData.map((crop, index) => (\r\n                    <div key={index}>\r\n                        <FlexRow>\r\n                            <TitleUserName name={crop[0]} />\r\n                        </FlexRow>\r\n                    </div>\r\n                ))}\r\n            <TitleDivisionLine />\r\n            <div class=\"d-flex bd-highlight mb-0\">\r\n                <div class=\"p-2 bd-highlight ml-auto\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <FaCircle color=\"#F97777\" style={image} />\r\n                            <FontSize>온도</FontSize>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <FaCircle color=\"#BACCFD\" style={image} />\r\n                            <FontSize>습도</FontSize>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <FaCircle color=\"#FCC9A7\" style={image} />\r\n                            <FontSize>조도</FontSize>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst TotalCss = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: 0 auto 0.3rem 0.5rem;\r\n`;\r\nconst UserCss = styled.div`\r\n    font-weight: 700;\r\n    font-size: 1.8em;\r\n`;\r\nconst TextCss = styled.div`\r\n    font-size: 1.3em;\r\n    margin-top: auto;\r\n`;\r\n\r\nexport default function TitleUserName(props) {\r\n    return (\r\n        <>\r\n            <TotalCss>\r\n                <UserCss>{props.name}</UserCss>\r\n                <TextCss>의 관찰 일지</TextCss>\r\n            </TotalCss>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nconst ResultModal = ({ title, content, confirmText, cancelText, onConfirm, onCancel }) => {\r\n    return (\r\n        <div className={`overflow-y-auto overflow-x-hidden fixed top-0 right-0 bottom-0 left-0 z-50 flex justify-center items-center`} onClick={onCancel}>\r\n            <div className=\"relative p-4 w-full max-w-md\">\r\n                <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\" onClick={(e) => e.stopPropagation()}>\r\n                    <div className=\"p-4 md:p-5 text-center\">\r\n                        <h3 className=\"mb-5 text-lg font-normal text-gray-500 dark:text-gray-400\">\r\n                            {title} {content}\r\n                        </h3>\r\n                        <div className=\"flex justify-center gap-4\">\r\n                            <button\r\n                                data-modal-hide=\"popup-modal\"\r\n                                type=\"button\"\r\n                                className=\"text-white bg-[#80BCBD] hover:bg-[#AAD9BB] focus:ring-4 focus:outline-none  font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center\"\r\n                                onClick={onConfirm}\r\n                            >\r\n                                {confirmText || '확인'}\r\n                            </button>\r\n                            <button\r\n                                data-modal-hide=\"popup-modal\"\r\n                                type=\"button\"\r\n                                className=\"text-white bg-gray-400 hover:bg-gray-500 focus:ring-4 focus:outline-none  font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center\"\r\n                                onClick={onCancel}\r\n                            >\r\n                                {cancelText || '취소'}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultModal;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { FaCircle } from 'react-icons/fa';\r\nimport { getDiaryFile } from '../../api/diaryApi';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport FullButton from '../FullButton';\r\nimport ResultModal from '../modal/ResultModal';\r\nimport ConfirmModal from '../modal/ConfirmModal'; // ConfirmModal을 불러옵니다.\r\n\r\nconst StyledContainer = styled.div`\r\n    background-color: #f9f7c9;\r\n    padding: 0.5rem 1.5rem;\r\n    min-height: 30em;\r\n`;\r\nconst FlexRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\nconst Picture = styled.img`\r\n    background-color: #d9d9d9;\r\n    border-radius: 0.8rem;\r\n    margin-bottom: 1rem;\r\n    height: 25rem;\r\n    width: 100%;\r\n`;\r\nconst Content = styled.div`\r\n    background-color: white;\r\n    border-radius: 0.8rem;\r\n    margin-bottom: 1rem;\r\n    padding: 1rem; /* 추가: 내부 여백 설정 */\r\n\r\n    textarea {\r\n        width: 100%;\r\n        min-height: 16rem;\r\n        border: none;\r\n        resize: none; /* 리사이즈 비활성화 */\r\n        outline: none; /* 포커스 효과 제거 */\r\n    }\r\n`;\r\n\r\nconst DiaryEdit = ({ memberNo, cropNo, baseUrl }) => {\r\n    const marginLeft = {\r\n        margin: '0.2rem',\r\n        fontSize: '0.8em',\r\n    };\r\n    const image = {\r\n        margin: 'auto 0.1rem',\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { diaryNo } = useParams();\r\n    const [diaryDetail, setDiaryDetail] = useState({});\r\n    const contentRef = useRef();\r\n\r\n    const [imagePaths, setImagePaths] = useState([]);\r\n    const [resultMessage, setResultMessage] = useState(null);\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false); // ConfirmModal을 보일지 여부를 상태로 관리합니다.\r\n\r\n    useEffect(() => {\r\n        diaryListData();\r\n    }, []);\r\n\r\n    const diaryListData = () => {\r\n        axios\r\n            .get(`${baseUrl}/diary/list/${diaryNo}`, {\r\n                withCredentials: true,\r\n            })\r\n            .then((res) => {\r\n                // buyDate와 diaryDate의 차이를 계산하여 새로운 속성 추가\r\n                const diaryData = res.data[0][0];\r\n                const censorData = res.data[0][1];\r\n                const cropBuyDate = new Date(diaryData.cropEntity.buyDate);\r\n                const diaryDate = new Date(diaryData.diaryDate);\r\n                const dateDifferenceInDays = Math.floor(\r\n                    (diaryDate - cropBuyDate) / (1000 * 60 * 60 * 24),\r\n                );\r\n                setDiaryDetail({\r\n                    ...diaryData,\r\n                    ...censorData,\r\n                    dateDifferenceInDays: dateDifferenceInDays,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const save = async () => {\r\n        setShowConfirmModal(true); // 저장하기 전에 ConfirmModal을 보이도록 설정합니다.\r\n    };\r\n\r\n    const handleConfirm = async () => {\r\n        setShowConfirmModal(false); // ConfirmModal을 닫습니다.\r\n\r\n        try {\r\n            const diaryDto = {\r\n                diaryNo: diaryDetail.diaryNo,\r\n                diaryDate: diaryDetail.diaryDate,\r\n                content: contentRef.current.value,\r\n\r\n                memberNo: diaryDetail.memberNo,\r\n                cropNo: diaryDetail.cropNo,\r\n            };\r\n\r\n            // HTTP PUT 요청 보내기\r\n            await axios.put(\r\n                `${baseUrl}/diary/modify/${diaryDto.diaryNo}`,\r\n                diaryDto,\r\n                {\r\n                    withCredentials: true,\r\n                },\r\n            );\r\n            // 성공적으로 수정되었으면 리다이렉션을 수행\r\n            setResultMessage({\r\n                title: '',\r\n                content: '수정되었습니다.',\r\n                type: 'success',\r\n            });\r\n        } catch (error) {\r\n            console.error('Error modifying diary:', error);\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setShowConfirmModal(false); // ConfirmModal을 닫습니다.\r\n    };\r\n\r\n    useEffect(() => {\r\n        getDiaryFile(diaryNo).then((data) => {\r\n            setImagePaths(data);\r\n        });\r\n    }, [diaryNo]);\r\n    console.log('imagePaths' + imagePaths);\r\n\r\n    const closeModal = () => {\r\n        setResultMessage(null);\r\n        navigate('/diary', { state: { memberNo, cropNo } });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <StyledContainer>\r\n                <FlexRow style={{ fontWeight: '700', margin: '0.5rem' }}>\r\n                    <div>\r\n                        {new Date(diaryDetail.diaryDate).toLocaleDateString()}\r\n                    </div>\r\n                    <div>({diaryDetail.dateDifferenceInDays}일차)</div>\r\n                </FlexRow>\r\n                <Picture src={`${baseUrl}/img/${imagePaths}`} />\r\n                <FlexRow style={{ margin: '0 0.5rem 0.5rem' }}>\r\n                    <FlexRow style={{ margin: 'auto' }}>\r\n                        <div\r\n                            className=\"d-flex justify-content-end\"\r\n                            style={marginLeft}\r\n                        >\r\n                            <FaCircle color=\"#F97777\" style={image} />\r\n                            <div>{diaryDetail.thomer}°C</div>\r\n                        </div>\r\n                        <div\r\n                            className=\"d-flex justify-content-end\"\r\n                            style={marginLeft}\r\n                        >\r\n                            <FaCircle color=\"#BACCFD\" style={image} />\r\n                            <div>{diaryDetail.soilHumid}%</div>\r\n                        </div>\r\n                        <div\r\n                            className=\"d-flex justify-content-end\"\r\n                            style={marginLeft}\r\n                        >\r\n                            <FaCircle color=\"#FCC9A7\" style={image} />\r\n                            <div>{diaryDetail.lumen}lx</div>\r\n                        </div>\r\n                    </FlexRow>\r\n                </FlexRow>\r\n                <Content>\r\n                    <textarea\r\n                        placeholder=\"내용을 작성해주세요 :D\"\r\n                        ref={contentRef}\r\n                        value={diaryDetail.content}\r\n                        onChange={(e) =>\r\n                            setDiaryDetail({\r\n                                ...diaryDetail,\r\n                                content: e.target.value,\r\n                            })\r\n                        }\r\n                    />\r\n                </Content>\r\n            </StyledContainer>\r\n            <FullButton name=\"수정하기\" onClick={save} />\r\n            {resultMessage && (\r\n                <ResultModal\r\n                    title={resultMessage.title}\r\n                    content={resultMessage.content}\r\n                    callbackFnc={closeModal}\r\n                />\r\n            )}\r\n            {showConfirmModal && (\r\n                <ConfirmModal\r\n                    title=\"\"\r\n                    content=\"일기를 수정하시겠습니까?\"\r\n                    confirmText=\"확인\"\r\n                    cancelText=\"취소\"\r\n                    onConfirm={handleConfirm}\r\n                    onCancel={handleCancel}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default DiaryEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getMemberNo } from '../../../../api/farmApi';\r\nimport styled from 'styled-components';\r\nimport DiaryDetailTitle from '../../../../components/diary/DiaryDetailTitle';\r\nimport DiaryEdit from '../../../../components/diary/DiaryEdit';\r\n\r\nconst baseUrl = process.env.REACT_APP_BASE_URL;\r\n\r\nconst StyledContainer = styled.div`\r\n    color: black;\r\n    font-size: 0.8em;\r\n    margin: auto 1.5rem auto;\r\n    margin-top: 2rem;\r\n`;\r\n\r\nconst DiaryEditPage = () => {\r\n    const [memberData, setMemberData] = useState(null); // 농부의 memberNo\r\n\r\n    const location = useLocation(); // 현재 위치\r\n    const { cropNo } = location.state;\r\n\r\n    console.log('수정 페이지' + memberData);\r\n    console.log('수정 페이지' + cropNo);\r\n\r\n    useEffect(() => {\r\n        // 서버에서 사용자 정보 가져오기\r\n        getMemberNo()\r\n            .then((res) => {\r\n                setMemberData(res.memberNo);\r\n            })\r\n            .catch((error) => {\r\n                console.log('데이터 안옴!!!!!!');\r\n                console.error(error);\r\n            });\r\n    }, [memberData]);\r\n\r\n    return (\r\n        <>\r\n            <StyledContainer>\r\n                <DiaryDetailTitle\r\n                    memberNo={memberData}\r\n                    cropNo={cropNo}\r\n                    baseUrl={baseUrl}\r\n                />\r\n            </StyledContainer>\r\n            <DiaryEdit\r\n                memberNo={memberData}\r\n                cropNo={cropNo}\r\n                baseUrl={baseUrl}\r\n            />\r\n        </>\r\n    );\r\n};\r\nexport default DiaryEditPage;\r\n"],"names":["baseUrl","process","async","getDiaryFile","diaryNo","axios","get","concat","params","data","diaryAddFile","fileObj","post","headers","FullButton","_ref","name","onClick","_jsx","_Fragment","children","type","style","width","height","class","Division","styled","div","_templateObject","_taggedTemplateLiteral","TitleDivisionLine","FlexRow","FontSize","_templateObject2","DiaryDetailTitle","memberNo","cropNo","image","margin","cropData","setCropData","useState","useEffect","cropInfoData","withCredentials","then","res","catch","error","console","log","_jsxs","Array","isArray","map","crop","index","TitleUserName","className","FaCircle","color","TotalCss","UserCss","TextCss","_templateObject3","props","title","content","confirmText","cancelText","onConfirm","onCancel","e","stopPropagation","StyledContainer","Picture","img","Content","_templateObject4","marginLeft","fontSize","navigate","useNavigate","useParams","diaryDetail","setDiaryDetail","contentRef","useRef","imagePaths","setImagePaths","resultMessage","setResultMessage","showConfirmModal","setShowConfirmModal","diaryListData","diaryData","censorData","cropBuyDate","Date","cropEntity","buyDate","diaryDate","dateDifferenceInDays","Math","floor","fontWeight","toLocaleDateString","src","thomer","soilHumid","lumen","placeholder","ref","value","onChange","target","ResultModal","callbackFnc","closeModal","state","ConfirmModal","diaryDto","current","put","handleCancel","DiaryEditPage","memberData","setMemberData","location","useLocation","getMemberNo","DiaryEdit"],"sourceRoot":""}