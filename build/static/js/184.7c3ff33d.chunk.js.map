{"version":3,"file":"static/js/184.7c3ff33d.chunk.js","mappings":"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","sources":["components/StyledBody.js","components/crop/CropCatebox.js","components/farm/FarmCropInfo.js","components/farm/FarmFarmerInfo.js","components/farm/FarmImage.js","components/farm/FarmInquiry.js","components/farm/FarmRead.js","components/farm/FarmReview.js","components/farm/MemberFarmRead.js","pages/member/farm/MemberDetailFarmpage.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst BodyBody = styled.body`\r\n    color: black;\r\n    background-color: #ffffff;\r\n    font-size: 20px;\r\n    margin-top: 2rem;\r\n    margin-left: 1.5rem;\r\n    margin-right: 1.5rem;\r\n    padding-bottom: 1rem;\r\n`;\r\n\r\nexport default function StyledBody({ children }) {\r\n    return (\r\n        <>\r\n            <BodyBody>{children}</BodyBody>\r\n        </>\r\n    );\r\n}\r\n","import styled from \"styled-components\";\r\nconst CateBox=styled.div`\r\n    background: #73A9AD;\r\n    border-radius:0.3rem;\r\n    width: 5em;\r\n    height: 2em;\r\n    color:white;\r\n    font-size:0.5em;\r\n    font-weight:400;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n`\r\nconst CropCatebox=(props)=>{\r\n    return(\r\n        <>\r\n        <CateBox>{props.name}</CateBox>\r\n        </>\r\n    );\r\n};\r\nexport default CropCatebox;","import { prefix } from '../../api/farmApi';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom'; // useParams를 가져옵니다.\r\nimport styled from 'styled-components';\r\nimport CropCatebox from '../crop/CropCatebox';\r\n\r\nconst url = `${prefix}`;\r\nconst StyledContainer = styled.div`\r\n    background-color: white;\r\n    border-radius: 0.8rem;\r\n    margin: 1.5em;\r\n`;\r\nconst FlexRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n`;\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\nconst Title = styled.div`\r\n    font-size: 1.2rem;\r\n    font-weight: 500;\r\n    margin-right: 0.5em;\r\n`;\r\nconst GreenText = styled.div`\r\n    margin-top: 0.5em;\r\n    color: #4f6f52; /* 초록색 */\r\n    font-size: 0.7rem;\r\n    font-weight: 600;\r\n`;\r\nconst GrayText = styled.div`\r\n    color: #585858; /* 회색 */\r\n    font-size: 0.6rem;\r\n    margin-top: 0.3em;\r\n`;\r\nconst FlexColumn = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\nconst DivLine = styled.div`\r\n    background: #90c8ac;\r\n    width: 5rem;\r\n    height: 0.15em;\r\n    margin-top: 1.5rem;\r\n`;\r\nconst ImageContainer = styled.div`\r\n    width: 35vw; /* viewport 너비의 28% */\r\n    height: 35vw; /* viewport 너비의 28% */\r\n    max-width: 200px; /* 최대 너비 */\r\n    max-height: 200px; /* 최대 높이 */\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden; /* 이미지가 컨테이너를 벗어나지 않도록 함 */\r\n    border-radius: 1rem;\r\n`;\r\nconst SubTitle = styled.div`\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    margin-right: 0.5rem;\r\n    margin-left: 0.2rem;\r\n    margin-top: 0.3rem;\r\n`;\r\nconst Content = styled.div`\r\n    font-size: 0.8rem;\r\n    color: #585858; /* 회색 */\r\n    margin-right: 0.7em;\r\n    margin-left: 0.2rem;\r\n    margin-top: 0.3em;\r\n`;\r\nconst SummaryText = styled.div`\r\n    margin-left: 0.8rem;\r\n`;\r\n\r\nexport default function FarmCropInfo({ farmCrop }) {\r\n    const getSeasons = (cropDetail) => {\r\n        const seaseons = [];\r\n        if (cropDetail.spring === 1) seaseons.push('봄');\r\n        if (cropDetail.summer === 1) seaseons.push('여름');\r\n        if (cropDetail.fall === 1) seaseons.push('가을');\r\n        if (cropDetail.winter === 1) seaseons.push('겨울');\r\n        return seaseons.join(', ');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"my-6 font-semibold\">작물 소개</div>\r\n            <StyledContainer>\r\n                <FlexRow>\r\n                    {farmCrop && (\r\n                        <div className=\"h-32 w-32 mr-[0.3rem]\">\r\n                            {\r\n                                <img\r\n                                    src={`${url}/${farmCrop.image}`}\r\n                                    className=\"h-full rounded-2xl shadow-xl\"\r\n                                />\r\n                            }\r\n                        </div>\r\n                    )}\r\n\r\n                    <SummaryText>\r\n                        <Container>\r\n                            <Title>\r\n                                {farmCrop && <div>{farmCrop.cropName}</div>}\r\n                            </Title>\r\n                            <CropCatebox\r\n                                name={\r\n                                    farmCrop &&\r\n                                    farmCrop.cropCategoryEntity.cropCateName\r\n                                }\r\n                            ></CropCatebox>\r\n                        </Container>\r\n                        <GreenText>{farmCrop && farmCrop.summary}</GreenText>\r\n                        <GrayText>\r\n                            제철시기 : {farmCrop && getSeasons(farmCrop)}\r\n                        </GrayText>\r\n                        <GrayText>\r\n                            난이도 : {farmCrop && farmCrop.summary}\r\n                        </GrayText>\r\n                        <GrayText>\r\n                            재배기간 : {farmCrop && farmCrop.term}일\r\n                        </GrayText>\r\n                        <GrayText>\r\n                            발아온도 : {farmCrop && farmCrop.lowTemp} ~{' '}\r\n                            {farmCrop && farmCrop.highTemp} 도\r\n                        </GrayText>\r\n                    </SummaryText>\r\n                </FlexRow>\r\n                <FlexColumn>\r\n                    <DivLine />\r\n                    <SubTitle>작물설명</SubTitle>\r\n                    {farmCrop &&\r\n                        farmCrop.cropContent\r\n                            .split('▷')\r\n                            .map((paragraph, index) => (\r\n                                <Content key={index}>{paragraph}</Content>\r\n                            ))}\r\n                    <DivLine />\r\n                    <SubTitle>재배팁</SubTitle>\r\n                    {farmCrop &&\r\n                        farmCrop.tip\r\n                            .split('▷')\r\n                            .map((tip, index) => (\r\n                                <Content key={index}>{tip}</Content>\r\n                            ))}\r\n                    <DivLine />\r\n                    <SubTitle>효과</SubTitle>\r\n                    <Content>{farmCrop && farmCrop.effect}</Content>\r\n                    <DivLine />\r\n                    <SubTitle>주요성분</SubTitle>\r\n                    <Content>{farmCrop && farmCrop.nutrient}</Content>\r\n                </FlexColumn>\r\n            </StyledContainer>\r\n        </>\r\n    );\r\n}\r\n","export default function FarmFarmerInfo({ farm, farmMember }) {\r\n    return (\r\n        <>\r\n            <div className=\"my-6 font-semibold\">{farm.farmName}</div>\r\n            <div className=\"flex items-center mt-3 text-[#878787] ml-4 font-semibold text-base\">\r\n                <img\r\n                    src={process.env.PUBLIC_URL + `/img/user.png`}\r\n                    alt=\"\"\r\n                    className=\"w-6 h-6  mr-2\"\r\n                />\r\n                {farmMember && <div>농부 : {farmMember.nickname}</div>}\r\n            </div>\r\n            <div className=\"flex items-center mt-2 text-[#878787] ml-4 font-semibold text-base\">\r\n                <img\r\n                    src={process.env.PUBLIC_URL + `/img/watch.png`}\r\n                    alt=\"\"\r\n                    className=\"w-6 h-6  mr-2\"\r\n                />\r\n                <div>상담 시간 : {farm.farmConnect}</div>\r\n            </div>\r\n            <div className=\"font-semibold mt-4 \">상세 설명</div>\r\n            <div className=\"mt-2 text-[#878787] font-semibold ml-4 text-base\">\r\n                {farm.farmDescription}\r\n            </div>\r\n            <div className=\"font-semibold mt-4 \">농장 번호</div>\r\n            <div className=\"ml-4 mt-2 text-[#878787] font-semibold text-base\">\r\n                {farm.farmPhone}\r\n            </div>\r\n            <div className=\"font-semibold mt-4 \">농장 평 수</div>\r\n            <div className=\"ml-4 mt-2 text-[#878787] font-semibold text-base\">\r\n                {farm.farmSize}평\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { prefix } from '../../api/farmApi';\r\nimport StyledBody from '../StyledBody';\r\nconst url = `${prefix}`;\r\n\r\nexport default function FarmImage({ imagePaths }) {\r\n    return (\r\n        <div>\r\n            <div className=\"my-6 font-semibold\">농장사진</div>\r\n\r\n            <div className=\"rounded-2xl w-full flex flex-wrap\">\r\n                {imagePaths ? (\r\n                    imagePaths.map((imagePath, idx) => (\r\n                        <div className=\"flex flex-col w-[33%]\">\r\n                            <img\r\n                                key={idx}\r\n                                src={`${url}/${imagePath}`}\r\n                                alt={`image ${idx}`}\r\n                                className=\"h-36 rounded-2xl shadow-xl  ml-[1rem] mt-[1rem] \"\r\n                            />\r\n\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <></>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import FarmerInquiryListPage from '../../pages/farmer/mypage/inquiry/FarmerInquiryListPage';\r\nexport default function FarmInquiry({ farm }) {\r\n    return (\r\n        <>\r\n            <FarmerInquiryListPage farm={farm} />\r\n        </>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n    getOne,\r\n    getListAllFile,\r\n    getFarmCropAll,\r\n    getFarmMember,\r\n    putOne,\r\n} from '../../api/farmApi';\r\nimport useCustomMove from '../../hooks/useCustomMove';\r\nimport Button from '../Button';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { prefix } from '../../api/farmApi';\r\nimport StyledHeader from '../StyledHeader';\r\nimport FarmFarmerInfo from './FarmFarmerInfo';\r\nimport FarmReview from './FarmReview';\r\nimport FarmCropInfo from './FarmCropInfo';\r\nimport FarmImage from './FarmImage';\r\nimport FarmInquiry from './FarmInquiry';\r\nimport { debounce } from 'lodash';\r\n\r\nconst url = `${prefix}`;\r\nconst initState = {\r\n    farmNo: 0,\r\n    farmName: '',\r\n    farmAddress: '',\r\n    farmContent: '',\r\n    farmDescription: '',\r\n    farmPhone: '',\r\n    farmSize: '',\r\n    farmCareer: '',\r\n    farmOrderNum: 0,\r\n    farmConnect: '',\r\n    farmCategory: '',\r\n    farmRating: 0.0,\r\n    reviewCnt: 0,\r\n};\r\nconst cropInit = {\r\n    cropCategoryEntity: { cropCateNo: 0, cropCateName: '' },\r\n    cropContent: '',\r\n    cropDictNo: 0,\r\n    cropName: '',\r\n    effect: '',\r\n    spring: 0,\r\n    summer: 0,\r\n    fall: 0,\r\n    winter: 0,\r\n    level: 0,\r\n    summary: '',\r\n    term: 0,\r\n    tip: '',\r\n    nutrient: '',\r\n    lowTemp: 0,\r\n    highTemp: 0,\r\n};\r\n\r\nexport default function FarmRead({ farmNo }) {\r\n    const [farm, setFarm] = useState(initState);\r\n    const { moveToList, moveToModify, moveToPay } = useCustomMove();\r\n    const [imagePaths, setImagePaths] = useState([]);\r\n    const [farmCrop, setFarmCrop] = useState({ ...cropInit });\r\n    const [content, setContent] = useState('리뷰'); // 버튼에 따른 컴포넌트 렌더링\r\n    const [farmMember, setFarmMember] = useState(); // 농장 멤버에 대한 데이터\r\n    const [totalReviews, setTotalReviews] = useState(0); // 농장 리뷰 수\r\n    const [averageRating, setAverageRating] = useState(0); //평균 별점을 저장할 상태\r\n\r\n    const handleTotalReviews = (data) => {\r\n        setTotalReviews(data);\r\n    };\r\n    const handleAverageRating = (data) => {\r\n        setAverageRating(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getFarmMember(farmNo).then((data) => {\r\n            setFarmMember(data);\r\n        });\r\n    }, [farmNo]);\r\n    const MAIN_DATA = [\r\n        { id: 1, name: '농부정보', text: '농부정보' },\r\n        { id: 2, name: '리뷰', text: '리뷰' },\r\n        { id: 3, name: '작물소개', text: '작물소개' },\r\n        { id: 4, name: '사진', text: '사진' },\r\n        { id: 5, name: '문의', text: '문의' },\r\n    ];\r\n\r\n    const handleClickButton = (name) => {\r\n        console.log(name);\r\n        setContent(name);\r\n    };\r\n    const selectComponent = {\r\n        농부정보: <FarmFarmerInfo farm={farm} farmMember={farmMember} />,\r\n        리뷰: (\r\n            <FarmReview\r\n                farm={farm}\r\n                handleTotalReviews={handleTotalReviews}\r\n                handleAverageRating={handleAverageRating}\r\n            />\r\n        ),\r\n        작물소개: <FarmCropInfo farmCrop={farmCrop} />,\r\n        사진: <FarmImage imagePaths={imagePaths} />,\r\n        문의: <FarmInquiry farm={farm} />,\r\n    };\r\n\r\n    const moveToListFunc = () => moveToList();\r\n    const moveToModifyFunc = () => moveToModify(farmNo);\r\n\r\n    useEffect(() => {\r\n        getOne(farmNo).then((data) => {\r\n            setFarm(data);\r\n        });\r\n    }, [farmNo]);\r\n\r\n    useEffect(() => {\r\n        getListAllFile(farmNo).then((data) => {\r\n            setImagePaths(data);\r\n        });\r\n    }, [farmNo]);\r\n\r\n    useEffect(() => {\r\n        getFarmCropAll(farmNo).then((data) => {\r\n            setFarmCrop(data.getResult);\r\n            console.log(data.getResult);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // totalReviews와 averageRating이 변경될 때 farm 상태 업데이트\r\n        setFarm((prevFarm) => ({\r\n            ...prevFarm,\r\n            farmRating: averageRating.toFixed(1),\r\n            reviewCnt: totalReviews,\r\n        }));\r\n    }, [totalReviews, averageRating]);\r\n\r\n    useEffect(() => {\r\n        // 디바운스 함수 설정\r\n        const debouncedUpdate = debounce(() => {\r\n            if (farm) {\r\n                putOne(farm)\r\n                    .then((data) => {\r\n                        console.log('modify result: ' + data);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error updating farm: ', error);\r\n                    });\r\n            }\r\n        }, 2000); // 2초 디바운스\r\n\r\n        debouncedUpdate();\r\n\r\n        // 디바운스 취소\r\n        return () => {\r\n            debouncedUpdate.cancel();\r\n        };\r\n    }, [farm]); // farm 상태가 변경될 때마다 실행\r\n\r\n    const renderFields = () => {\r\n        return (\r\n            <div className=\"w-full\">\r\n                <div className=\"flex justify-between\">\r\n                    <div className=\" rounded-2xl w-24 h-24 flex\">\r\n                        {imagePaths && (\r\n                            <img\r\n                                key={0}\r\n                                src={`${url}/${imagePaths[0]}`}\r\n                                alt={`image ${0}`}\r\n                                className=\"h-full rounded-2xl shadow-xl\"\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <div>\r\n                        <Button\r\n                            name={'<'}\r\n                            widthHeight={'w-10'}\r\n                            moveToListFunc={moveToListFunc}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"font-semibold text-[1.5rem] mt-2 flex justify-between\">\r\n                    {farm.farmName}\r\n\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + `/img/upload.png`}\r\n                        alt=\"\"\r\n                        className=\"w-6 h-6 mt-[0.3rem] \"\r\n                    />\r\n                </div>\r\n                <div className=\"flex mb-2 mt-2\">\r\n                    {farmCrop && (\r\n                        <div className=\"text-[1rem] \">\r\n                            {farmCrop.cropCategoryEntity.cropCateName} 전문 농장\r\n                        </div>\r\n                    )}\r\n                    <div className=\"text-[1rem] flex ml-4 text-[#737373]\">\r\n                        <img\r\n                            src={process.env.PUBLIC_URL + `/img/locate.png`}\r\n                            alt=\"\"\r\n                            className=\"mr-1\"\r\n                        />\r\n                        {farm.farmAddress}\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-[0.9rem] text-[#737373] ml-3 mt-3\">\r\n                    {farm.farmContent}\r\n                </div>\r\n                <div className=\"flex h-16 mt-3 rounded bg-[#FAFAFA] ml-3 items-center\">\r\n                    <div className=\"basis-1/4\">\r\n                        <div className=\"text-[0.8rem] text-center\">신청수</div>\r\n                        <div className=\"text-[0.79rem] font-semibold text-center\">\r\n                            {/* {farm.farmOrderNum} */}\r\n                            8회\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"basis-1/2\">\r\n                        <div className=\"text-[0.8rem] text-center\">\r\n                            리뷰 {'>'}{' '}\r\n                        </div>\r\n                        <div className=\"text-[0.79rem] font-semibold flex justify-center items-center\">\r\n                            <img\r\n                                src={process.env.PUBLIC_URL + `/img/star.png`}\r\n                                alt=\"\"\r\n                                className=\"mr-1 w-4 h-4\"\r\n                            />\r\n                            <span>{averageRating.toFixed(1)}</span>\r\n                            <span className=\"text-[0.7rem] ml-1\">\r\n                                ({totalReviews})\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"basis-1/4 \">\r\n                        <div className=\"text-[0.8rem] text-center\">경력</div>\r\n                        <div className=\"text-[0.79rem] font-semibold text-center\">\r\n                            {farm.farmCareer}년\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <StyledHeader>{renderFields()}</StyledHeader>\r\n\r\n            <div className=\" w-full border-t-[0.2rem] border-[#F2F2F2]\">\r\n                <div className=\"flex justify-between mt-2\">\r\n                    {MAIN_DATA.map((data) => {\r\n                        return (\r\n                            <button\r\n                                onClick={() => handleClickButton(data.name)}\r\n                                name={data.name}\r\n                                key={data.id}\r\n                                className=\"block rounded-md px-2.5 py-1.5 text-base font-semibold text-[#878787] focus:text-gray-700 focus:text-black focus:underline\"\r\n                            >\r\n                                {data.text}\r\n                            </button>\r\n                        );\r\n                    })}\r\n                </div>\r\n                {content && (\r\n                    <div className=\"border-t-[0.2rem]\">\r\n                        {selectComponent[content]}\r\n                    </div>\r\n                )}\r\n                <div className=\"rounded-lg mt-5 bottom-0 w-full bg-[#80BCBD] p-3 text-base font-semibold text-white  flex justify-center text-[20px]\">\r\n                    <button onClick={() => moveToModify(farmNo)}>\r\n                        농장 수정하기\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import FarmerReviewListPage from '../../pages/farmer/mypage/review/FarmerReviewListPage';\r\n\r\nexport default function FarmReview({\r\n    farm,\r\n    handleTotalReviews,\r\n    handleAverageRating,\r\n}) {\r\n    return (\r\n        <>\r\n            <FarmerReviewListPage\r\n                farm={farm}\r\n                handleTotalReviews={handleTotalReviews}\r\n                handleAverageRating={handleAverageRating}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n    getOne,\r\n    getListAllFile,\r\n    getFarmCropAll,\r\n    getFarmMember,\r\n    putOne,\r\n} from '../../api/farmApi';\r\nimport useCustomMove from '../../hooks/useCustomMove';\r\nimport Button from '../Button';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { prefix } from '../../api/farmApi';\r\nimport StyledHeader from '../StyledHeader';\r\nimport StyledBody from '../StyledBody';\r\nimport FarmFarmerInfo from './FarmFarmerInfo';\r\nimport FarmReview from './FarmReview';\r\nimport FarmCropInfo from './FarmCropInfo';\r\nimport FarmImage from './FarmImage';\r\nimport FarmInquiry from './FarmInquiry';\r\nimport { debounce } from 'lodash';\r\n\r\nconst url = `${prefix}`;\r\nconst initState = {\r\n    farmNo: 0,\r\n    farmName: '',\r\n    farmAddress: '',\r\n    farmContent: '',\r\n    farmDescription: '',\r\n    farmPhone: '',\r\n    farmSize: '',\r\n    farmCareer: '',\r\n    farmOrderNum: 0,\r\n    farmConnect: '',\r\n    farmCategory: '',\r\n    farmRating: 0.0,\r\n    reviewCnt: 0,\r\n};\r\nconst cropInit = {\r\n    cropCategoryEntity: { cropCateNo: 0, cropCateName: '' },\r\n    cropContent: '',\r\n    cropDictNo: 0,\r\n    cropName: '',\r\n    effect: '',\r\n    spring: 0,\r\n    summer: 0,\r\n    fall: 0,\r\n    winter: 0,\r\n    level: 0,\r\n    summary: '',\r\n    term: 0,\r\n    tip: '',\r\n    nutrient: '',\r\n    lowTemp: 0,\r\n    highTemp: 0,\r\n};\r\n\r\nexport default function FarmRead({ farmNo }) {\r\n    const [farm, setFarm] = useState(initState);\r\n    const { moveToList, moveToModify, moveToPay } = useCustomMove();\r\n    const [imagePaths, setImagePaths] = useState([]);\r\n    const [farmCrop, setFarmCrop] = useState({ ...cropInit });\r\n    const [content, setContent] = useState('리뷰'); // 버튼에 따른 컴포넌트 렌더링\r\n    const [farmMember, setFarmMember] = useState(); // 농장 멤버에 대한 데이터\r\n    const [totalReviews, setTotalReviews] = useState(0); // 농장 리뷰 수\r\n    const [averageRating, setAverageRating] = useState(0); //평균 별점을 저장할 상태\r\n\r\n    const handleTotalReviews = (data) => {\r\n        setTotalReviews(data);\r\n    };\r\n    const handleAverageRating = (data) => {\r\n        setAverageRating(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getFarmMember(farmNo).then((data) => {\r\n            setFarmMember(data);\r\n        });\r\n    }, [farmNo]);\r\n    const MAIN_DATA = [\r\n        { id: 1, name: '농부정보', text: '농부정보' },\r\n        { id: 2, name: '리뷰', text: '리뷰' },\r\n        { id: 3, name: '작물소개', text: '작물소개' },\r\n        { id: 4, name: '사진', text: '사진' },\r\n        { id: 5, name: '문의', text: '문의' },\r\n    ];\r\n\r\n    const handleClickButton = (name) => {\r\n        console.log(name);\r\n        setContent(name);\r\n    };\r\n    const selectComponent = {\r\n        농부정보: <FarmFarmerInfo farm={farm} farmMember={farmMember} />,\r\n        리뷰: (\r\n            <FarmReview\r\n                farm={farm}\r\n                handleTotalReviews={handleTotalReviews}\r\n                handleAverageRating={handleAverageRating}\r\n            />\r\n        ),\r\n        작물소개: <FarmCropInfo farmCrop={farmCrop} />,\r\n        사진: <FarmImage imagePaths={imagePaths} />,\r\n        문의: <FarmInquiry farm={farm} />,\r\n    };\r\n\r\n    const moveToListFunc = () => moveToList();\r\n    const moveToModifyFunc = () => moveToModify(farmNo);\r\n\r\n    useEffect(() => {\r\n        getOne(farmNo).then((data) => {\r\n            setFarm(data);\r\n        });\r\n    }, [farmNo]);\r\n\r\n    useEffect(() => {\r\n        getListAllFile(farmNo).then((data) => {\r\n            setImagePaths(data);\r\n        });\r\n    }, [farmNo]);\r\n\r\n    useEffect(() => {\r\n        getFarmCropAll(farmNo).then((data) => {\r\n            setFarmCrop(data.getResult);\r\n            console.log(data.getResult);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // totalReviews와 averageRating이 변경될 때 farm 상태 업데이트\r\n        setFarm((prevFarm) => ({\r\n            ...prevFarm,\r\n            farmRating: averageRating.toFixed(1),\r\n            reviewCnt: totalReviews,\r\n        }));\r\n    }, [totalReviews, averageRating]);\r\n\r\n    useEffect(() => {\r\n        // 디바운스 함수 설정\r\n        const debouncedUpdate = debounce(() => {\r\n            if (farm) {\r\n                putOne(farm)\r\n                    .then((data) => {\r\n                        console.log('modify result: ' + data);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error updating farm: ', error);\r\n                    });\r\n            }\r\n        }, 2000); // 2초 디바운스\r\n\r\n        debouncedUpdate();\r\n\r\n        // 디바운스 취소\r\n        return () => {\r\n            debouncedUpdate.cancel();\r\n        };\r\n    }, [farm]); // farm 상태가 변경될 때마다 실행\r\n\r\n    // 경로 복사\r\n    const handleCopyCurrentPath = () => {\r\n        const currentPath = window.location.href;\r\n        navigator.clipboard\r\n            .writeText(currentPath)\r\n            .then(() => {\r\n                console.log('현재 경로가 클립보드에 복사되었습니다.');\r\n                alert('현재 경로 클립보드에 복사');\r\n            })\r\n            .catch((error) => {\r\n                console.error('클립보드 복사 중 오류가 발생했습니다:', error);\r\n            });\r\n    };\r\n\r\n    const renderFields = () => {\r\n        return (\r\n            <div className=\"w-full\">\r\n                <div className=\"flex justify-between\">\r\n                    <div className=\" rounded-2xl w-24 h-24 flex\">\r\n                        {imagePaths && (\r\n                            <img\r\n                                key={0}\r\n                                src={`${url}/${imagePaths[0]}`}\r\n                                alt={`image ${0}`}\r\n                                className=\"h-full rounded-2xl shadow-xl\"\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <div>\r\n                        <Button\r\n                            name={'<'}\r\n                            widthHeight={'w-10'}\r\n                            moveToListFunc={moveToListFunc}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"font-semibold text-[1.5rem] mt-2 flex justify-between\">\r\n                    {farm.farmName}\r\n\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + `/img/upload.png`}\r\n                        alt=\"\"\r\n                        className=\"w-6 h-6 mt-[0.3rem] \"\r\n                    />\r\n                </div>\r\n                <div className=\"flex mb-2 mt-2\">\r\n                    {farmCrop && (\r\n                        <div className=\"text-[1rem] \">\r\n                            {farmCrop.cropCategoryEntity.cropCateName} 전문 농장\r\n                        </div>\r\n                    )}\r\n                    <div className=\"text-[1rem] flex ml-4 text-[#737373]\">\r\n                        <div\r\n                            onClick={handleCopyCurrentPath}\r\n                            style={{ cursor: 'pointer' }}\r\n                        >\r\n                            <img\r\n                                src={process.env.PUBLIC_URL + `/img/locate.png`}\r\n                                alt=\"\"\r\n                                className=\"mr-1\"\r\n                            />\r\n                        </div>\r\n                        {farm.farmAddress}\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-[0.9rem] text-[#737373] ml-3 mt-3\">\r\n                    {farm.farmContent}\r\n                </div>\r\n                <div className=\"flex h-16 mt-3 rounded bg-[#FAFAFA] ml-3 items-center\">\r\n                    <div className=\"basis-1/4\">\r\n                        <div className=\"text-[0.8rem] text-center\">신청수</div>\r\n                        <div className=\"text-[0.79rem] font-semibold text-center\">\r\n                            {/* {farm.farmOrderNum} */}\r\n                            8회\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"basis-1/2\">\r\n                        <div className=\"text-[0.8rem] text-center\">\r\n                            리뷰 {'>'}{' '}\r\n                        </div>\r\n                        <div className=\"text-[0.79rem] font-semibold flex justify-center items-center\">\r\n                            <img\r\n                                src={process.env.PUBLIC_URL + `/img/star.png`}\r\n                                alt=\"\"\r\n                                className=\"mr-1 w-4 h-4\"\r\n                            />\r\n                            <span>{averageRating.toFixed(1)}</span>\r\n                            <span className=\"text-[0.7rem] ml-1\">\r\n                                ({totalReviews})\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"basis-1/4 \">\r\n                        <div className=\"text-[0.8rem] text-center\">경력</div>\r\n                        <div className=\"text-[0.79rem] font-semibold text-center\">\r\n                            {farm.farmCareer}년\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <StyledHeader>{renderFields()}</StyledHeader>\r\n\r\n            <div className=\" w-full border-t-[0.2rem] border-[#F2F2F2]\">\r\n                <div className=\"flex justify-between mt-2\">\r\n                    {MAIN_DATA.map((data) => {\r\n                        return (\r\n                            <button\r\n                                onClick={() => handleClickButton(data.name)}\r\n                                name={data.name}\r\n                                key={data.id}\r\n                                className=\"block rounded-md px-2.5 py-1.5 text-base font-semibold text-[#878787] focus:text-gray-700 focus:text-black focus:underline\"\r\n                            >\r\n                                {data.text}\r\n                            </button>\r\n                        );\r\n                    })}\r\n                </div>\r\n                {content && (\r\n                    <div className=\"border-t-[0.2rem]\">\r\n                        {selectComponent[content]}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"rounded-lg mt-5 bottom-0 w-full bg-[#80BCBD] p-3 text-base font-semibold text-white  flex justify-center text-[20px]\">\r\n                <button onClick={() => moveToPay(farmNo)}>농장 신청하기</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import FarmRead from '../../../components/farm/FarmRead';\r\nimport StyledHeader from '../../../components/StyledHeader';\r\nimport StyledBody from '../../../components/StyledBody';\r\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\r\nimport Button from '../../../components/Button';\r\nimport MemberFarmRead from '../../../components/farm/MemberFarmRead';\r\n\r\nexport default function MemberDetailFarmpage() {\r\n    const { farmNo } = useParams();\r\n    const [queryParams] = useSearchParams();\r\n\r\n    return (\r\n        <>\r\n            <StyledHeader></StyledHeader>\r\n            <StyledBody>\r\n                <MemberFarmRead farmNo={farmNo} />\r\n            </StyledBody>\r\n        </>\r\n    );\r\n}\r\n"],"names":["BodyBody","styled","body","_templateObject","_taggedTemplateLiteral","StyledBody","_ref","children","_jsx","_Fragment","CateBox","div","props","name","url","concat","prefix","StyledContainer","FlexRow","_templateObject2","Container","_templateObject3","Title","_templateObject4","GreenText","_templateObject5","GrayText","_templateObject6","FlexColumn","_templateObject7","DivLine","_templateObject8","SubTitle","_templateObject9","_templateObject10","Content","_templateObject11","SummaryText","_templateObject12","FarmCropInfo","farmCrop","_jsxs","className","src","image","cropName","CropCatebox","cropCategoryEntity","cropCateName","summary","cropDetail","seaseons","spring","push","summer","fall","winter","join","getSeasons","term","lowTemp","highTemp","cropContent","split","map","paragraph","index","tip","effect","nutrient","FarmFarmerInfo","farm","farmMember","farmName","alt","nickname","farmConnect","farmDescription","farmPhone","farmSize","FarmImage","imagePaths","imagePath","idx","FarmInquiry","FarmerInquiryListPage","initState","farmNo","farmAddress","farmContent","farmCareer","farmOrderNum","farmCategory","farmRating","reviewCnt","cropInit","cropCateNo","cropDictNo","level","FarmRead","setFarm","useState","moveToList","moveToModify","moveToPay","useCustomMove","setImagePaths","setFarmCrop","content","setContent","setFarmMember","totalReviews","setTotalReviews","averageRating","setAverageRating","useEffect","getFarmMember","then","data","selectComponent","농부정보","리뷰","FarmReview","handleTotalReviews","handleAverageRating","작물소개","사진","문의","moveToListFunc","getOne","getListAllFile","getFarmCropAll","getResult","console","log","prevFarm","toFixed","debouncedUpdate","debounce","putOne","catch","error","cancel","StyledHeader","Button","widthHeight","id","text","onClick","handleClickButton","FarmerReviewListPage","handleCopyCurrentPath","currentPath","window","location","href","navigator","clipboard","writeText","alert","style","cursor","MemberDetailFarmpage","useParams","queryParams","useSearchParams","MemberFarmRead"],"sourceRoot":""}