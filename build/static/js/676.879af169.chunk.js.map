{"version":3,"file":"static/js/676.879af169.chunk.js","mappings":"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","sources":["api/diaryApi.js","components/FullButton.js","components/TitleDivisionLine.js","components/diary/DiaryDetailTitle.js","components/diary/TitleUserName.js","components/diary/DiaryRegist.js","pages/member/mypage/diary/DiaryRegistPage.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const baseUrl = process.env.REACT_APP_BASE_URL;\r\n\r\n// 사진 조회\r\nexport async function getDiaryFile(diaryNo) {\r\n    const res = await axios.get(`${baseUrl}/diary/img/DIARY`, {\r\n        params: { diaryNo: diaryNo },\r\n    });\r\n    return res.data;\r\n}\r\n// 사진 등록\r\nexport async function diaryAddFile(fileObj) {\r\n    const header = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n\r\n    const res = await axios.post(\r\n        `${baseUrl}/diary/registFile`,\r\n        fileObj,\r\n        header,\r\n    );\r\n    return res.data;\r\n}\r\n// 사진 삭제\r\nexport async function diarydeleteFile(diaryNo, fileName) {\r\n    const res = await axios.delete(\r\n        `${baseUrl}/diary/deleteImage/DIARY/${diaryNo}/${fileName}`,\r\n    );\r\n    return res.data;\r\n}\r\n","export default function FullButton({ name, onClick }) {\r\n    const buttonStyle = {\r\n        width: '100%',\r\n        height: '3em',\r\n    };\r\n    return (\r\n        <>\r\n            <button\r\n                type=\"button\"\r\n                style={buttonStyle}\r\n                class=\"rounded-md bg-[#80BCBD] px-2.5 py-1.5 text-sm font-semibold text-white shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-[#4F6F52]\"\r\n                onClick={onClick}\r\n            >\r\n                {name}\r\n            </button>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Division = styled.div`\r\n  border-top: 0.2rem solid #90c8ac;\r\n`;\r\n\r\nexport default function TitleDivisionLine() {\r\n  return (\r\n    <>\r\n      <Division></Division>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FaCircle } from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport TitleUserName from '../../components/diary/TitleUserName';\r\nimport TitleDivisionLine from '../TitleDivisionLine';\r\n\r\nconst FlexRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: auto 0.2rem 0.3rem auto;\r\n`;\r\nconst FontSize = styled.div`\r\n    font-size: 0.8em;\r\n`;\r\n\r\nexport default function DiaryDetailTitle({ memberNo, cropNo, baseUrl }) {\r\n    const image = {\r\n        margin: 'auto 0.1rem',\r\n        width: '30%',\r\n    };\r\n\r\n    const [cropData, setCropData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        cropInfoData();\r\n    }, [memberNo, cropNo]);\r\n\r\n    const cropInfoData = () => {\r\n        axios\r\n            .get(`${baseUrl}/calendar/crop/crop-info`, {\r\n                params: {\r\n                    memberNo: memberNo,\r\n                    cropNo: cropNo,\r\n                },\r\n                withCredentials: true,\r\n            })\r\n            .then((res) => {\r\n                setCropData(res.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    return (\r\n        <>\r\n            {Array.isArray(cropData) &&\r\n                cropData.map((crop, index) => (\r\n                    <div key={index}>\r\n                        <FlexRow>\r\n                            <TitleUserName name={crop[0]} />\r\n                        </FlexRow>\r\n                    </div>\r\n                ))}\r\n            <TitleDivisionLine />\r\n            <div class=\"d-flex bd-highlight mb-0\">\r\n                <div class=\"p-2 bd-highlight ml-auto\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <FaCircle color=\"#F97777\" style={image} />\r\n                            <FontSize>온도</FontSize>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <FaCircle color=\"#BACCFD\" style={image} />\r\n                            <FontSize>습도</FontSize>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <FaCircle color=\"#FCC9A7\" style={image} />\r\n                            <FontSize>조도</FontSize>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst TotalCss = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: 0 auto 0.3rem 0.5rem;\r\n`;\r\nconst UserCss = styled.div`\r\n    font-weight: 700;\r\n    font-size: 1.8em;\r\n`;\r\nconst TextCss = styled.div`\r\n    font-size: 1.3em;\r\n    margin-top: auto;\r\n`;\r\n\r\nexport default function TitleUserName(props) {\r\n    return (\r\n        <>\r\n            <TotalCss>\r\n                <UserCss>{props.name}</UserCss>\r\n                <TextCss>의 관찰 일지</TextCss>\r\n            </TotalCss>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { diaryAddFile } from '../../api/diaryApi';\r\nimport { FaCircle } from 'react-icons/fa';\r\nimport { LuImagePlus } from 'react-icons/lu';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport FullButton from '../FullButton';\r\n\r\nconst StyledContainer = styled.div`\r\n    background-color: #f9f7c9;\r\n    padding: 0.5rem 1.5rem;\r\n    min-height: 30em;\r\n`;\r\nconst FlexRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\nconst Picture = styled.div`\r\n    background-color: #d9d9d9;\r\n    border-radius: 0.8rem;\r\n    margin-bottom: 1rem;\r\n    height: 8rem;\r\n`;\r\nconst Content = styled.div`\r\n    background-color: white;\r\n    border-radius: 0.8rem;\r\n    margin-bottom: 1rem;\r\n    padding: 1rem; /* 추가: 내부 여백 설정 */\r\n\r\n    textarea {\r\n        width: 100%;\r\n        min-height: 16rem;\r\n        border: none;\r\n        resize: none; /* 리사이즈 비활성화 */\r\n        outline: none; /* 포커스 효과 제거 */\r\n    }\r\n`;\r\nconst Height = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 8rem;\r\n`;\r\nconst fileInitState = {\r\n    files: [],\r\n    manageDiv: 'DIARY',\r\n    fileManageNo: 0,\r\n};\r\n\r\nconst DiaryRegist = ({ memberNo, cropNo, baseUrl }) => {\r\n    const marginLeft = {\r\n        margin: '0.2rem',\r\n        fontSize: '0.8em',\r\n    };\r\n    const image = {\r\n        margin: 'auto 0.1rem',\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n    const { diaryDate: urlDiaryDate } = useParams();\r\n\r\n    // URL 파라미터에서 받아온 값이 없을 경우 현재 날짜를 기본값으로 사용\r\n    const [diaryDate, setDiaryDate] = useState(\r\n        urlDiaryDate ? new Date(urlDiaryDate) : new Date(),\r\n    );\r\n\r\n    const contentRef = useRef();\r\n    const [content, setContent] = useState('');\r\n\r\n    const [cropBuyDate, setCropBuyDate] = useState(null);\r\n    const [dateDifferenceInDays, setDateDifferenceInDays] = useState(null);\r\n\r\n    const [sensorInfo, setSensorInfo] = useState([]);\r\n\r\n    const [file, setFile] = useState({ ...fileInitState });\r\n    const [fileReuslt, setFileResult] = useState(null); // 파일 결과\r\n\r\n    useEffect(() => {\r\n        getCropBuyDate();\r\n        sensorInfoData();\r\n    }, [memberNo, cropNo]);\r\n\r\n    useEffect(() => {\r\n        if (cropBuyDate) {\r\n            calculateDateDifference();\r\n        }\r\n    }, [diaryDate, cropBuyDate]);\r\n\r\n    const getCropBuyDate = async () => {\r\n        try {\r\n            const response = await axios.get(\r\n                `${baseUrl}/calendar/crop/buy-date`,\r\n                {\r\n                    params: {\r\n                        memberNo: memberNo,\r\n                        cropNo: cropNo,\r\n                    },\r\n                    withCredentials: true,\r\n                },\r\n            );\r\n\r\n            const buyDate = new Date(response.data);\r\n            setCropBuyDate(buyDate);\r\n        } catch (error) {\r\n            console.error('Error fetching crop buy date:', error);\r\n        }\r\n    };\r\n\r\n    const sensorInfoData = () => {\r\n        const formattedDiaryDate = new Date(diaryDate);\r\n\r\n        axios\r\n            .get(`${baseUrl}/calendar/sensor-info`, {\r\n                params: {\r\n                    memberNo: memberNo,\r\n                    cropNo: cropNo,\r\n                    diaryDate: formattedDiaryDate,\r\n                },\r\n                withCredentials: true,\r\n            })\r\n            .then((res) => {\r\n                setSensorInfo(res.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const calculateDateDifference = () => {\r\n        const today = new Date();\r\n        const differenceInDays = Math.floor(\r\n            (today - cropBuyDate) / (1000 * 60 * 60 * 24),\r\n        );\r\n        setDateDifferenceInDays(differenceInDays);\r\n    };\r\n\r\n    const handleChangeFile = (e) => {\r\n        setFile({ ...file, files: e.target.files });\r\n        const updatedFileData = { ...file, files: e.target.files };\r\n        setFile(updatedFileData);\r\n    };\r\n\r\n    const fileData = { ...file };\r\n\r\n    const save = async () => {\r\n        try {\r\n            const requestData = {\r\n                diaryDate: diaryDate,\r\n                content: content,\r\n\r\n                memberNo: memberNo,\r\n                cropNo: cropNo,\r\n            };\r\n\r\n            // 일기 등록 요청\r\n            const response = await axios.post(\r\n                `${baseUrl}/diary/register`,\r\n                requestData,\r\n                {\r\n                    withCredentials: true,\r\n                },\r\n            );\r\n\r\n            // 일기 등록 성공 시 처리\r\n            console.log('일기 등록 성공:', response.data);\r\n\r\n            const diaryNo = response.data.Result;\r\n            console.log(diaryNo);\r\n            const formData = new FormData();\r\n\r\n            if (fileData.files && fileData.files.length > 0) {\r\n                formData.append('files', fileData.files[0]);\r\n            }\r\n            formData.append('manageDiv', 'DIARY');\r\n            formData.append('fileManageNo', diaryNo);\r\n\r\n            diaryAddFile(formData)\r\n                .then((fileReuslt) => {\r\n                    console.log(fileReuslt);\r\n                    setFileResult(fileReuslt['FileNo']);\r\n                    setFile({ ...fileInitState });\r\n                })\r\n                .catch((e) => {\r\n                    console.error(e);\r\n                });\r\n\r\n            navigate(-1);\r\n        } catch (error) {\r\n            console.error('Error registering diary:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <StyledContainer>\r\n                <FlexRow style={{ fontWeight: '700', margin: '0.5rem' }}>\r\n                    <div>{diaryDate.toLocaleDateString()}</div>\r\n                    <div>({dateDifferenceInDays}일차)</div>\r\n                </FlexRow>\r\n                <Picture>\r\n                    <Height>\r\n                        <LuImagePlus />\r\n                    </Height>\r\n                </Picture>\r\n                <input\r\n                    id=\"dropzone-file\"\r\n                    type=\"file\"\r\n                    onChange={handleChangeFile}\r\n                />\r\n                {sensorInfo.length > 0 && (\r\n                    <FlexRow style={{ margin: '0 0.5rem 0.5rem' }}>\r\n                        {sensorInfo.map((data, index) => (\r\n                            <FlexRow key={index} style={{ margin: 'auto' }}>\r\n                                <div\r\n                                    className=\"d-flex justify-content-end\"\r\n                                    style={marginLeft}\r\n                                >\r\n                                    <FaCircle color=\"#F97777\" style={image} />\r\n                                    <div>{data[1]}°C</div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"d-flex justify-content-end\"\r\n                                    style={marginLeft}\r\n                                >\r\n                                    <FaCircle color=\"#BACCFD\" style={image} />\r\n                                    <div>{data[2]}%</div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"d-flex justify-content-end\"\r\n                                    style={marginLeft}\r\n                                >\r\n                                    <FaCircle color=\"#FCC9A7\" style={image} />\r\n                                    <div>{data[3]}lx</div>\r\n                                </div>\r\n                            </FlexRow>\r\n                        ))}\r\n                    </FlexRow>\r\n                )}\r\n                <Content>\r\n                    <textarea\r\n                        placeholder=\"오늘은 어땠나요?\"\r\n                        ref={contentRef}\r\n                        value={content}\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                    />\r\n                </Content>\r\n            </StyledContainer>\r\n            <FullButton name=\"등록하기\" onClick={save}></FullButton>\r\n        </>\r\n    );\r\n};\r\nexport default DiaryRegist;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getMemberNo } from '../../../../api/farmApi';\r\nimport styled from 'styled-components';\r\nimport DiaryDetailTitle from '../../../../components/diary/DiaryDetailTitle';\r\nimport DiaryRegist from '../../../../components/diary/DiaryRegist';\r\n\r\nconst baseUrl = process.env.REACT_APP_BASE_URL;\r\n\r\nconst StyledContainer = styled.div`\r\n    color: black;\r\n    font-size: 0.8em;\r\n    margin: auto 1.5rem auto;\r\n    margin-top: 2rem;\r\n`;\r\n\r\nconst DiaryRegistPage = () => {\r\n    const [memberData, setMemberData] = useState(null); // 농부의 memberNo\r\n\r\n    const location = useLocation(); // 현재 위치\r\n    const { cropNo } = location.state;\r\n\r\n    console.log('등록 페이지' + memberData);\r\n    console.log('등록 페이지' + cropNo);\r\n\r\n    useEffect(() => {\r\n        // 서버에서 사용자 정보 가져오기\r\n        getMemberNo()\r\n            .then((res) => {\r\n                setMemberData(res.memberNo);\r\n            })\r\n            .catch((error) => {\r\n                console.log('데이터 안옴!!!!!!');\r\n                console.error(error);\r\n            });\r\n    }, [memberData]);\r\n\r\n    return (\r\n        <>\r\n            <StyledContainer>\r\n                <DiaryDetailTitle\r\n                    memberNo={memberData}\r\n                    cropNo={cropNo}\r\n                    baseUrl={baseUrl}\r\n                />\r\n            </StyledContainer>\r\n            <DiaryRegist\r\n                memberNo={memberData}\r\n                cropNo={cropNo}\r\n                baseUrl={baseUrl}\r\n            />\r\n        </>\r\n    );\r\n};\r\nexport default DiaryRegistPage;\r\n"],"names":["baseUrl","process","async","getDiaryFile","diaryNo","axios","get","concat","params","data","diaryAddFile","fileObj","post","headers","FullButton","_ref","name","onClick","_jsx","_Fragment","children","type","style","width","height","class","Division","styled","div","_templateObject","_taggedTemplateLiteral","TitleDivisionLine","FlexRow","FontSize","_templateObject2","DiaryDetailTitle","memberNo","cropNo","image","margin","cropData","setCropData","useState","useEffect","cropInfoData","withCredentials","then","res","catch","error","console","log","_jsxs","Array","isArray","map","crop","index","TitleUserName","className","FaCircle","color","TotalCss","UserCss","TextCss","_templateObject3","props","StyledContainer","Picture","Content","_templateObject4","Height","_templateObject5","fileInitState","files","manageDiv","fileManageNo","marginLeft","fontSize","navigate","useNavigate","diaryDate","urlDiaryDate","useParams","setDiaryDate","Date","contentRef","useRef","content","setContent","cropBuyDate","setCropBuyDate","dateDifferenceInDays","setDateDifferenceInDays","sensorInfo","setSensorInfo","file","setFile","fileReuslt","setFileResult","getCropBuyDate","sensorInfoData","calculateDateDifference","response","buyDate","formattedDiaryDate","today","differenceInDays","Math","floor","fileData","fontWeight","toLocaleDateString","LuImagePlus","id","onChange","e","target","updatedFileData","length","placeholder","ref","value","requestData","Result","formData","FormData","append","DiaryRegistPage","memberData","setMemberData","location","useLocation","state","getMemberNo","DiaryRegist"],"sourceRoot":""}