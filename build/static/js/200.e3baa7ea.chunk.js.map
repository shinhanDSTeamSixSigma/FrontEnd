{"version":3,"file":"static/js/200.e3baa7ea.chunk.js","mappings":"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","sources":["components/StyledBody.js","components/TitleDivisionLine.js","components/farm/FarmPay.js","pages/member/farm/FarmPayPage.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst BodyBody = styled.body`\r\n    color: black;\r\n    background-color: #ffffff;\r\n    font-size: 20px;\r\n    margin-top: 2rem;\r\n    margin-left: 1.5rem;\r\n    margin-right: 1.5rem;\r\n    padding-bottom: 1rem;\r\n`;\r\n\r\nexport default function StyledBody({ children }) {\r\n    return (\r\n        <>\r\n            <BodyBody>{children}</BodyBody>\r\n        </>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Division = styled.div`\r\n  border-top: 0.2rem solid #90c8ac;\r\n`;\r\n\r\nexport default function TitleDivisionLine() {\r\n  return (\r\n    <>\r\n      <Division></Division>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '../Button';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { getOne, getFarmCropAll } from '../../api/farmApi';\r\nimport { prefix } from '../../api/farmApi';\r\n\r\nimport styled from 'styled-components';\r\nimport TitleDivisionLine from '../TitleDivisionLine';\r\n\r\nconst url = `${prefix}`;\r\n\r\nconst FlexRow = styled.div`\r\n    // row로 붙여주는 느낌\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n`;\r\n\r\nexport function FarmPay() {\r\n    // 장바구니(수량, 가격, 이름)\r\n    const [cartItems, setCartItems] = useState([]);\r\n    // 총가격\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n    const navigate = useNavigate();\r\n    // farmNo(Pathvariable로 받음)\r\n    const { farmNo } = useParams();\r\n    // farmNo에 맞는 농장 데이터값 - 객체\r\n    const [myFarm, setMyFarm] = useState();\r\n    // farmNo에 맞는 농장의 대표작물의 데이터값 - 객체\r\n    const [myCrop, setMyCrop] = useState();\r\n    console.log(myCrop);\r\n\r\n    useEffect(() => {\r\n        updateTotalPrice();\r\n    }, [cartItems]);\r\n\r\n    // 농장 api\r\n    useEffect(() => {\r\n        getOne(farmNo).then((result) => {\r\n            console.log(result);\r\n            setMyFarm(result);\r\n        });\r\n    }, [farmNo]);\r\n\r\n    // 농장 대표 작물 api\r\n    useEffect(() => {\r\n        getFarmCropAll(farmNo).then((result) => {\r\n            console.log(result.getResult);\r\n            setMyCrop(result.getResult);\r\n        });\r\n    }, [farmNo]);\r\n\r\n    const updateTotalPrice = () => {\r\n        let sum = 0;\r\n        cartItems.forEach((item) => {\r\n            sum += item.price * item.quantity;\r\n        });\r\n        setTotalPrice(sum);\r\n    };\r\n\r\n    // optionNumber - 번호로 나타내기\r\n    const handleCheckboxChange = (event, optionNumber, name, price) => {\r\n        const isChecked = event.target.checked;\r\n        const item = { optionNumber, name, price, quantity: 1 }; // 선택한 옵션을 객체\r\n        if (isChecked) {\r\n            setCartItems((prevItems) => [...prevItems, item]);\r\n        } else {\r\n            setCartItems((prevItems) =>\r\n                prevItems.filter((item) => item.optionNumber !== optionNumber),\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleQuantityChange = (event, name) => {\r\n        const quantity = parseInt(event.target.value);\r\n        setCartItems((prevItems) =>\r\n            prevItems.map((item) =>\r\n                item.name === name ? { ...item, quantity } : item,\r\n            ),\r\n        );\r\n    };\r\n\r\n    const handlePayment = () => {\r\n        // 결제하기 버튼 클릭 시 실행되는 함수\r\n        navigate(`/pay`, { state: { totalPrice, cartItems, myCrop, myFarm } }); // 페이지 이동 및 상태 전달\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {myFarm && (\r\n                <div\r\n                    style={{\r\n                        fontWeight: 'bold',\r\n                        textAlign: 'center',\r\n                        paddingBottom: '1rem',\r\n                        fontSize: '1.2rem',\r\n                    }}\r\n                >\r\n                    {myFarm.farmName}\r\n                </div>\r\n            )}\r\n\r\n            <TitleDivisionLine></TitleDivisionLine>\r\n\r\n            {/*myCrop && <div>{<img src={`${url}/${myCrop.image}`} />}</div>} */}\r\n\r\n            {/* 여기부터 수정함 */}\r\n            <FlexRow style={{ paddingTop: '1rem', paddingBottom: '1rem' }}>\r\n                <div>\r\n                    <img\r\n                        className=\"cropImage\"\r\n                        alt=\"crop\"\r\n                        src={\r\n                            process.env.PUBLIC_URL +\r\n                            '/img/memberMypage/NoFarm.png'\r\n                        }\r\n                        style={{ width: '130px', marginRight: '1rem' }} // 사진 크기 조정\r\n                    />\r\n                </div>\r\n                {/* \r\n                <div className=\"menu border-2\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"menu2\"\r\n                        onChange={(event) =>\r\n                            handleCheckboxChange(event, 2, '비료', 5000)\r\n                        }\r\n                    />\r\n                    <label htmlFor=\"menu2\">비료 - 5,000원</label> */}\r\n\r\n                <div>\r\n                    <FlexRow style={{ fontWeight: 'bold', fontSize: '1rem' }}>\r\n                        {myCrop && <div>작물 - {myCrop.cropName}</div>}\r\n                    </FlexRow>\r\n                    {/* 메뉴 목록 */}\r\n                    <div className=\"menuList\">\r\n                        <div className=\"text-sm mt-2 mb-3\">농장 평수</div>\r\n                        {/* 여기에 메뉴 목록을 표시하는 코드 추가 */}\r\n                        <div\r\n                            className=\"menu border-2 mb-1 p-1\"\r\n                            style={{ borderRadius: '8px', fontSize: '0.9rem' }}\r\n                        >\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"menu1\"\r\n                                onChange={(event) =>\r\n                                    handleCheckboxChange(event, 1, '1평', 50000)\r\n                                }\r\n                            />\r\n                            <label\r\n                                htmlFor=\"menu1\"\r\n                                style={{ marginLeft: '0.5rem' }}\r\n                            >\r\n                                1평 - 50,000원\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </FlexRow>\r\n\r\n            <TitleDivisionLine></TitleDivisionLine>\r\n\r\n            {/* 장바구니 내용 표시 */}\r\n            <div id=\"rightmenus\">\r\n                <div className=\"text-base font-bold mt-4 mb-3\">장바구니</div>\r\n                {cartItems.map((item) => (\r\n                    <div\r\n                        key={item.name}\r\n                        className=\"rightmenu border-2 mb-2\"\r\n                        data-menu-name={item.name}\r\n                        style={{ borderRadius: '1rem', padding: '1rem' }}\r\n                    >\r\n                        <input type=\"hidden\" value={item.menuUrl} />\r\n                        <div className=\"text-sm\">{item.name}</div>\r\n                        <div className=\"text-sm\">\r\n                            수량:{' '}\r\n                            <input\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                value={item.quantity}\r\n                                onChange={(event) =>\r\n                                    handleQuantityChange(event, item.name)\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"text-sm\">\r\n                                {item.price * item.quantity}원\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* 총 금액 표시 */}\r\n            <div className=\"flex justify-end text-base font-bold bottom-10\">\r\n                <div className=\"sumAmount text-right mt-1 mr-4\">\r\n                    총 금액: {totalPrice}원\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        onClick={handlePayment}\r\n                        className=\"w-20 bg-[#80BCBD] block rounded-md p-1 \"\r\n                        style={{ color: 'white' }}\r\n                    >\r\n                        결제하기\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Fragment, useState } from 'react';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { XMarkIcon } from '@heroicons/react/24/outline';\r\nimport { FarmPay } from '../../../components/farm/FarmPay';\r\nimport StyledBody from '../../../components/StyledBody';\r\n\r\nexport default function FarmPayPage() {\r\n    return (\r\n        <>\r\n            <StyledBody>\r\n                <FarmPay />\r\n            </StyledBody>\r\n        </>\r\n    );\r\n}\r\n"],"names":["BodyBody","styled","body","_templateObject","_taggedTemplateLiteral","StyledBody","_ref","children","_jsx","_Fragment","Division","div","TitleDivisionLine","concat","prefix","FlexRow","FarmPay","cartItems","setCartItems","useState","totalPrice","setTotalPrice","navigate","useNavigate","farmNo","useParams","myFarm","setMyFarm","myCrop","setMyCrop","console","log","useEffect","updateTotalPrice","getOne","then","result","getFarmCropAll","getResult","sum","forEach","item","price","quantity","_jsxs","style","fontWeight","textAlign","paddingBottom","fontSize","farmName","paddingTop","className","alt","src","width","marginRight","cropName","borderRadius","type","id","onChange","event","handleCheckboxChange","optionNumber","name","isChecked","target","checked","prevItems","filter","htmlFor","marginLeft","map","padding","value","menuUrl","min","handleQuantityChange","parseInt","onClick","handlePayment","state","color","FarmPayPage"],"sourceRoot":""}