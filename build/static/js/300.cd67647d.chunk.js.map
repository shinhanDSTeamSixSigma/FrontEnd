{"version":3,"file":"static/js/300.cd67647d.chunk.js","mappings":"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","sources":["components/StyledBody.js","components/paging/Paging.js","components/farm/MyFarmList.js","components/MySwiper.js","pages/main/MainPage.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst BodyBody = styled.body`\r\n    color: black;\r\n    background-color: #ffffff;\r\n    font-size: 20px;\r\n    margin-top: 2rem;\r\n    margin-left: 1.5rem;\r\n    margin-right: 1.5rem;\r\n    padding-bottom: 1rem;\r\n`;\r\n\r\nexport default function StyledBody({ children }) {\r\n    return (\r\n        <>\r\n            <BodyBody>{children}</BodyBody>\r\n        </>\r\n    );\r\n}\r\n","export default function Paging({ serverData, movePage }) {\r\n    return (\r\n        <div className=\"m-6 flex justify-center pt-3\">\r\n            {serverData.prev ? (\r\n                <div\r\n                    className=\"m-2 p-2 w-16 text-center  font-bold text-blue-400 cursor-pointer\"\r\n                    onClick={() => movePage({ page: serverData.prevPage })}\r\n                >\r\n                    이전{' '}\r\n                </div>\r\n            ) : (\r\n                <></>\r\n            )}\r\n\r\n            {serverData.pageNumList.map((pageNum) => (\r\n                <div\r\n                    key={pageNum}\r\n                    className={`m-2 p-2 w-12  text-center rounded shadow-md text-white cursor-pointer ${\r\n                        serverData.current === pageNum\r\n                            ? 'bg-[#4F6F52]'\r\n                            : 'bg-[#80BCBD]'\r\n                    }`}\r\n                    onClick={() => movePage({ page: pageNum })}\r\n                >\r\n                    {pageNum}\r\n                </div>\r\n            ))}\r\n\r\n            {serverData.next ? (\r\n                <div\r\n                    className=\"m-2 p-2 w-16 text-center font-bold text-blue-400 cursor-pointer\"\r\n                    onClick={() => movePage({ page: serverData.nextPage })}\r\n                >\r\n                    다음\r\n                </div>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import StyledHeader from '../StyledHeader';\r\nimport StyledBody from '../StyledBody';\r\nimport {\r\n    getAllList,\r\n    getPaging,\r\n    getListAllFile,\r\n    prefix,\r\n    getFarmCropAll,\r\n    getMemberNo,\r\n} from '../../api/farmApi';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Button from '../Button';\r\nimport useCustomMove from '../../hooks/useCustomMove';\r\nimport Paging from '../paging/Paging';\r\n\r\nconst url = `${prefix}`;\r\nconst initState = {\r\n    dtoList: [],\r\n    pageNumList: [],\r\n    pageRequestDTO: null,\r\n    prev: false,\r\n    next: false,\r\n    totoalCount: 0,\r\n    prevPage: 0,\r\n    nextPage: 0,\r\n    totalPage: 0,\r\n    current: 0,\r\n};\r\nconst cropInit = {\r\n    cropCategoryEntity: { cropCateNo: 0, cropCateName: '' },\r\n    cropContent: '',\r\n    cropDictNo: 0,\r\n    cropName: '',\r\n    effect: '',\r\n    spring: 0,\r\n    summer: 0,\r\n    fall: 0,\r\n    winter: 0,\r\n    level: 0,\r\n    summary: '',\r\n    term: 0,\r\n    tip: '',\r\n    nutrient: '',\r\n    lowTemp: 0,\r\n    highTemp: 0,\r\n};\r\nexport default function MyFarmList({ numberOfItems }) {\r\n    const { page, size, moveToList, moveToRead, memberMoveToRead } =\r\n        useCustomMove();\r\n    const [imagePaths, setImagePaths] = useState({});\r\n    const [farmCrop, setFarmCrop] = useState({ ...cropInit });\r\n    // const navigate = useNavigate();\r\n\r\n    const [serverData, setServerData] = useState(initState);\r\n    const [sortByReview, setSortByReview] = useState(false); // 필터링\r\n    const [memberData, setMemberData] = useState(null); // 농부의 memberNo\r\n\r\n    useEffect(() => {\r\n        console.log(process.env.REACT_APP_BASE_URL);\r\n        // 서버에서 사용자 정보 가져오기\r\n        getMemberNo()\r\n            .then((res) => {\r\n                setMemberData(res);\r\n                console.log('memberdata', res);\r\n\r\n                console.log('멤버데이터 ', JSON.stringify(memberData));\r\n            })\r\n            .catch((error) => {\r\n                console.log('데이터 안옴!!!!!!');\r\n                console.error(error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [page, sortByReview]); // page와 sortByReview가 변경될 때마다 데이터를 다시 가져옴\r\n\r\n    const fetchData = async () => {\r\n        const data = await getPaging({ page, size, sortByReview });\r\n        sortFarmList(data.dtoList); // 정렬\r\n        setServerData(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchImages = async () => {\r\n            const updatedImagePaths = {}; // 새로운 객체 생성\r\n            const promises = serverData.dtoList.map((farm) => {\r\n                return getListAllFile(farm.farmNo)\r\n                    .then((data) => ({\r\n                        farmNo: farm.farmNo,\r\n                        imagePath: data, // 이미지 데이터 형태에 따라 수정 필요\r\n                    }))\r\n                    .catch((error) => ({\r\n                        farmNo: farm.farmNo,\r\n                        images: [],\r\n                    }));\r\n            });\r\n\r\n            const imageDataList = await Promise.all(promises);\r\n            // 새로운 객체에 이미지 경로 할당\r\n            imageDataList.forEach((imageData) => {\r\n                updatedImagePaths[imageData.farmNo] = imageData.imagePath;\r\n            });\r\n\r\n            setImagePaths(updatedImagePaths);\r\n        };\r\n\r\n        if (serverData.dtoList.length > 0) {\r\n            fetchImages();\r\n        }\r\n    }, [serverData]);\r\n\r\n    // member가 farmer면 농부의 농장 상세 member면 멤버의 농장 상세\r\n    const handleFarmItemClick = (farmNo) => {\r\n        if (!memberData) {\r\n            memberMoveToRead(farmNo);\r\n            return;\r\n        }\r\n        if (memberData.role === 'FARMER') {\r\n            moveToRead(farmNo);\r\n        } else if (memberData.role === 'USER') {\r\n            memberMoveToRead(farmNo);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchCrop = async () => {\r\n            const updatedfarmCrop = {}; // 새로운 객체 생성\r\n            const promises = serverData.dtoList.map((farm) => {\r\n                return getFarmCropAll(farm.farmNo)\r\n                    .then((data) => ({\r\n                        farmNo: farm.farmNo,\r\n                        farmCropData: data.getResult,\r\n                    }))\r\n                    .catch((error) => ({\r\n                        farmNo: farm.farmNo,\r\n                        farmCropData: {},\r\n                    }));\r\n            });\r\n\r\n            const cropDataList = await Promise.all(promises);\r\n\r\n            cropDataList.forEach((cropData) => {\r\n                updatedfarmCrop[cropData.farmNo] = cropData.farmCropData;\r\n            });\r\n\r\n            setFarmCrop(updatedfarmCrop);\r\n        };\r\n\r\n        if (serverData.dtoList.length > 0) {\r\n            fetchCrop();\r\n        }\r\n    }, [serverData]);\r\n    useEffect(() => {\r\n        console.log(JSON.stringify(farmCrop));\r\n        console.log(JSON.stringify(imagePaths));\r\n    });\r\n\r\n    // 정렬\r\n    const sortFarmList = (list) => {\r\n        if (sortByReview) {\r\n            list.sort((a, b) => b.reviewCnt - a.reviewCnt); // 리뷰 많은 순\r\n        } else {\r\n            list.sort((a, b) => a.farmNo - b.farmNo); // 기본 순서\r\n        }\r\n    };\r\n\r\n    const handleSortChange = (value) => {\r\n        if (value === 'review') {\r\n            setSortByReview(true);\r\n        } else {\r\n            setSortByReview(false);\r\n        }\r\n    };\r\n\r\n    const limitData = serverData.dtoList.slice(0, numberOfItems);\r\n    return (\r\n        <>\r\n            <StyledBody>\r\n                <div className=\"flex justify-end text-[1rem] text-[#4F6F52]\">\r\n                    <div\r\n                        style={{\r\n                            borderRadius: '10px',\r\n                            overflow: 'hidden',\r\n                            backgroundColor: '#D5F0C1',\r\n                        }}\r\n                    >\r\n                        <select\r\n                            onChange={(e) => handleSortChange(e.target.value)}\r\n                            style={{\r\n                                border: 'none',\r\n                                outline: 'none',\r\n                                padding: '0.5rem',\r\n                                fontSize: '0.9rem',\r\n                                backgroundColor: 'inherit',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            <option value=\"default\">기본순</option>\r\n                            <option value=\"review\">리뷰 많은 순</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {limitData.map((key, idx) => (\r\n                        <div key={key.farmNo} className=\"\">\r\n                            <div\r\n                                className=\"shadow-xl h-28   mt-2 mb-1 rounded-2xl flex cursor-pointer justify-between\"\r\n                                onClick={() => handleFarmItemClick(key.farmNo)}\r\n                            >\r\n                                <div className=\"mt-auto mb-auto ml-5 \">\r\n                                    <div className=\"text-[1.1rem] font-semibold mt-1\">\r\n                                        {key.farmName}\r\n                                    </div>\r\n                                    {farmCrop &&\r\n                                        farmCrop[key.farmNo] &&\r\n                                        farmCrop[key.farmNo][\r\n                                            'cropCategoryEntity'\r\n                                        ] && (\r\n                                            <p className=\"text-xs mb-[2px]\">\r\n                                                {\r\n                                                    farmCrop[key.farmNo][\r\n                                                        'cropCategoryEntity'\r\n                                                    ]['cropCateName']\r\n                                                }{' '}\r\n                                                전문 농장\r\n                                            </p>\r\n                                        )}\r\n                                    <div className=\"flex text-[0.7rem] mb-1\">\r\n                                        <div className=\"text-[0.7rem] font-semibold flex justify-center items-center\">\r\n                                            <img\r\n                                                src={\r\n                                                    process.env.PUBLIC_URL +\r\n                                                    `/img/star.png`\r\n                                                }\r\n                                                alt=\"\"\r\n                                                className=\"mr-1 w-4 h-4\"\r\n                                            />\r\n                                            <span>\r\n                                                {key.farmRating.toFixed(1)}\r\n                                            </span>\r\n                                            <span className=\"text-[0.7rem] ml-1\">\r\n                                                ({key.reviewCnt})\r\n                                            </span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <span className=\"ml-1\">\r\n                                                | 경력 {key.farmCareer}년\r\n                                            </span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <span className=\"ml-1\">\r\n                                                |{' '}\r\n                                                {key.farmAddress.replace(\r\n                                                    / .*/,\r\n                                                    '',\r\n                                                )}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <p className=\"text-xs text-gray-500\">\r\n                                        {key.farmContent}\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\" rounded-2xl w-20 h-20 flex justify-center items-center mr-3\">\r\n                                    {imagePaths && imagePaths[key.farmNo] && (\r\n                                        <img\r\n                                            key={0}\r\n                                            src={`${url}/${\r\n                                                imagePaths[key.farmNo][0]\r\n                                            }`}\r\n                                            alt={`image ${0}`}\r\n                                            className=\"h-full rounded-2xl shadow-xl mt-[2rem] \"\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </StyledBody>\r\n            <Paging serverData={serverData} movePage={moveToList} />\r\n        </>\r\n    );\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\nimport 'swiper/css';\r\nimport 'swiper/css/effect-coverflow';\r\nimport 'swiper/css/pagination';\r\nimport 'swiper/css/navigation';\r\n\r\nimport '../styles/swiper.css';\r\n\r\nimport {\r\n    Autoplay,\r\n    Navigation,\r\n    EffectCoverflow,\r\n    Pagination,\r\n} from 'swiper/modules';\r\n\r\nexport default function MySwiper() {\r\n    return (\r\n        <>\r\n            <Swiper\r\n                effect={'coverflow'}\r\n                grabCursor={true}\r\n                autoplay={{\r\n                    delay: 2500,\r\n                    disableOnInteraction: false,\r\n                }}\r\n                centeredSlides={true}\r\n                slidesPerView={'auto'}\r\n                coverflowEffect={{\r\n                    rotate: 50,\r\n                    stretch: 0,\r\n                    depth: 70,\r\n                    modifier: 1,\r\n                    slideShadows: true,\r\n                }}\r\n                pagination={{\r\n                    clickable: true,\r\n                }}\r\n                navigation={true}\r\n                modules={[Autoplay, Navigation, EffectCoverflow, Pagination]}\r\n                className=\"mySwiper\"\r\n            >\r\n                <SwiperSlide>\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + `/img/farmImage6.png`}\r\n                        alt=\"\"\r\n                    />\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + `/img/farmImage1.png`}\r\n                        alt=\"\"\r\n                    />\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + `/img/farmImage2.png`}\r\n                        alt=\"\"\r\n                    />\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + `/img/farmImage3.png`}\r\n                        alt=\"\"\r\n                    />\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + `/img/farmImage7.png`}\r\n                        alt=\"\"\r\n                    />\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + `/img/farmImage8.png`}\r\n                        alt=\"\"\r\n                    />\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + `/img/farmImage9.png`}\r\n                        alt=\"\"\r\n                    />\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + `/img/farmImage10.png`}\r\n                        alt=\"\"\r\n                    />\r\n                </SwiperSlide>\r\n            </Swiper>\r\n        </>\r\n    );\r\n}\r\n","import StyledHeader from '../../components/StyledHeader';\r\nimport StyledBody from '../../components/StyledBody';\r\nimport MySwiper from '../../components/MySwiper';\r\nimport Button from '../../components/Button';\r\nimport MyFarmList from '../../components/farm/MyFarmList';\r\nimport { useEffect } from 'react';\r\nconst MainPage = () => {\r\n    const handleLogout = () => {\r\n        console.log('로그아웃 함수가 호출되었습니다.');\r\n        // 쿠키 만료\r\n        document.cookie = 'auth=; max-age=0; path=/';\r\n        //setMemberData(null);\r\n    };\r\n    useEffect(() => {\r\n        // 현재 페이지의 쿼리 문자열 가져오기\r\n        const queryString = window.location.search;\r\n\r\n        // URLSearchParams 객체를 사용하여 쿼리 문자열 파싱\r\n        const urlParams = new URLSearchParams(queryString);\r\n\r\n        // 파라미터 값 가져오기\r\n        const isLogout = urlParams.get('login');\r\n        if (isLogout === '0') {\r\n            handleLogout();\r\n            window.location.href = '/';\r\n        }\r\n    }, []);\r\n    return (\r\n        <div className=\"main\">\r\n            <StyledHeader>\r\n                <MySwiper />\r\n            </StyledHeader>\r\n            <StyledBody>\r\n                {/* <div>리뷰 많은 Top3</div> */}\r\n\r\n                <div className=\"shadow-2xl h-[30rem] mt-2 overflow-hidden rounded-2xl hide-scrollbar\">\r\n                    <div\r\n                        className=\"text-xl\"\r\n                        style={{\r\n                            justifyContent: 'center',\r\n                            display: 'flex',\r\n                            fontWeight: '1000',\r\n                            marginTop: '1rem',\r\n                        }}\r\n                    >\r\n                        대표 농장\r\n                    </div>{' '}\r\n                    <MyFarmList numberOfItems={3} />\r\n                </div>\r\n\r\n                <img\r\n                    src={process.env.PUBLIC_URL + `/img/banner.png`}\r\n                    alt=\"배너사진\"\r\n                    style={{\r\n                        marginTop: '2rem',\r\n                        marginBottom: '2rem',\r\n                        borderRadius: '3rem',\r\n                    }}\r\n                />\r\n            </StyledBody>\r\n        </div>\r\n    );\r\n};\r\nexport default MainPage;\r\n"],"names":["BodyBody","styled","body","_templateObject","_taggedTemplateLiteral","StyledBody","_ref","children","_jsx","_Fragment","Paging","serverData","movePage","_jsxs","className","prev","onClick","page","prevPage","pageNumList","map","pageNum","concat","current","next","nextPage","url","prefix","initState","dtoList","pageRequestDTO","totoalCount","totalPage","cropInit","cropCategoryEntity","cropCateNo","cropCateName","cropContent","cropDictNo","cropName","effect","spring","summer","fall","winter","level","summary","term","tip","nutrient","lowTemp","highTemp","MyFarmList","numberOfItems","size","moveToList","moveToRead","memberMoveToRead","useCustomMove","imagePaths","setImagePaths","useState","farmCrop","setFarmCrop","setServerData","sortByReview","setSortByReview","memberData","setMemberData","useEffect","console","log","process","getMemberNo","then","res","JSON","stringify","catch","error","fetchData","async","data","getPaging","sortFarmList","length","updatedImagePaths","promises","farm","getListAllFile","farmNo","imagePath","images","Promise","all","forEach","imageData","fetchImages","updatedfarmCrop","getFarmCropAll","farmCropData","getResult","cropData","fetchCrop","list","sort","a","b","reviewCnt","limitData","slice","style","borderRadius","overflow","backgroundColor","onChange","e","handleSortChange","value","target","border","outline","padding","fontSize","cursor","key","idx","handleFarmItemClick","role","farmName","src","alt","farmRating","toFixed","farmCareer","farmAddress","replace","farmContent","MySwiper","Swiper","grabCursor","autoplay","delay","disableOnInteraction","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","clickable","navigation","modules","Autoplay","Navigation","EffectCoverflow","Pagination","SwiperSlide","MainPage","queryString","window","location","search","URLSearchParams","get","document","cookie","href","StyledHeader","justifyContent","display","fontWeight","marginTop","marginBottom"],"sourceRoot":""}