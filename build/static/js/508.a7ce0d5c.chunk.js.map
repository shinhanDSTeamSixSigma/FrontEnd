{"version":3,"file":"static/js/508.a7ce0d5c.chunk.js","mappings":"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","sources":["pages/member/mypage/review/ReviewListPage.js"],"sourcesContent":["import styled, { css } from 'styled-components';\r\nimport axios from 'axios';\r\nimport { IoArrowBackSharp } from 'react-icons/io5';\r\nimport BoardTitle from '../../../../components/board/BoardTitle';\r\nimport EmptyBoard from '../../../../components/board/EmptyBoard';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport StarRating from '../../../../components/board/StarRating.js';\r\nimport { getMemberNo } from '../../../../api/farmApi';\r\n\r\nconst StyledContainer = styled.div`\r\n    background-color: white;\r\n    border-radius: 0.6rem;\r\n    margin: 1.5rem;\r\n`;\r\nconst FlexRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin: 0.5rem 1rem 1rem 0;\r\n`;\r\nconst FlexRowGap = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 1rem;\r\n    font-size: 0.6rem;\r\n    color: #878787;\r\n`;\r\nconst Totalcnt = styled.div`\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    color: #878787;\r\n`;\r\nconst FarmName = styled.div`\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    color: #878787;\r\n`;\r\nconst Content = styled.div`\r\n    font-size: 0.8rem;\r\n    font-weight: 500;\r\n`;\r\nconst TitleContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 0.5rem;\r\n`;\r\n\r\nconst InquiryItem = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    border: 0.1rem solid lightgray;\r\n    border-radius: 1rem;\r\n    padding: 1.2rem 1.2rem;\r\n    margin-top: 1rem;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const BackButton = styled(IoArrowBackSharp)`\r\n    color: var(--color-textgrey);\r\n    cursor: pointer;\r\n`;\r\nconst baseUrl = process.env.REACT_APP_BASE_URL;\r\nconst ReviewListPage = () => {\r\n    const [reviews, setReviews] = useState([]);\r\n    const [totalReviews, setTotalReviews] = useState(0);\r\n    const [memberData, setMemberData] = useState();\r\n    const [nickname, setNickname] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleBack = () => {\r\n        navigate('/mypage'); // 마이페이지로 이동\r\n    };\r\n    console.log(baseUrl);\r\n    useEffect(() => {\r\n        // 서버에서 사용자 정보 가져오기\r\n        getMemberNo()\r\n            .then((res) => {\r\n                setMemberData(res);\r\n                setNickname(res.nickname); // 닉네임 설정\r\n                console.log(res);\r\n\r\n                console.log('멤버데이터 ', JSON.stringify(res.memberNo));\r\n                // if (res.role !== 'FARMER') {\r\n                //     console.log(res.role);\r\n                //     alert('농부만 들어갈 수 있는 페이지 입니다!');\r\n                //     window.location.href = '/';\r\n                // }\r\n            })\r\n            .catch((error) => {\r\n                console.log('데이터 안옴!!!!!!');\r\n                console.error(error);\r\n            });\r\n    }, []);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get(\r\n                    `${baseUrl}/review/${memberData.memberNo}/list`,\r\n                    {\r\n                        withCredentials: true,\r\n                    },\r\n                );\r\n\r\n                // 날짜 형식 변환\r\n                const formattedData = response.data.map((item) => ({\r\n                    ...item,\r\n\r\n                    createdDate: new Date(item.createdDate).toLocaleDateString(\r\n                        'ko-KR',\r\n                        {\r\n                            year: 'numeric',\r\n                            month: '2-digit',\r\n                            day: '2-digit',\r\n                        },\r\n                    ),\r\n                }));\r\n\r\n                setReviews(formattedData);\r\n                setTotalReviews(formattedData.length);\r\n                console.log(formattedData);\r\n            } catch (error) {\r\n                console.error('Error fetching reviews:', error);\r\n            }\r\n        };\r\n\r\n        fetchData(); // 데이터 가져오기 함수 호출\r\n    }, [memberData]);\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n            <StyledContainer>\r\n                <BackButton onClick={handleBack} size=\"20\" />\r\n                <FlexRow>\r\n                    <FlexRow style={{ marginRight: '1rem' }}>\r\n                        <TitleContainer>\r\n                            <BoardTitle name={`${nickname}의 리뷰`} />\r\n                        </TitleContainer>\r\n\r\n                        <Totalcnt>({totalReviews})</Totalcnt>\r\n                    </FlexRow>\r\n                </FlexRow>\r\n\r\n                {reviews.length === 0 ? (\r\n                    <EmptyBoard name=\"리뷰내역이 없습니다.\" />\r\n                ) : (\r\n                    reviews.map((review, index) => (\r\n                        <Link to={`/review/${review.reviewNo}/detail`}>\r\n                            <InquiryItem key={index}>\r\n                                <FarmName>{review.farmName}</FarmName>\r\n                                <StarRating\r\n                                    rating={review.rating}\r\n                                    size=\"1rem\"\r\n                                />\r\n                                <Content>{review.reviewContent}</Content>\r\n                                <FlexRowGap>\r\n                                    <div>{review.nickname}</div>\r\n                                    <div>{review.createdDate}</div>\r\n                                </FlexRowGap>\r\n                            </InquiryItem>\r\n                        </Link>\r\n                    ))\r\n                )}\r\n            </StyledContainer>\r\n        </>\r\n    );\r\n};\r\nexport default ReviewListPage;\r\n"],"names":["StyledContainer","styled","div","_templateObject","_taggedTemplateLiteral","FlexRow","_templateObject2","FlexRowGap","_templateObject3","Totalcnt","_templateObject4","FarmName","_templateObject5","Content","_templateObject6","TitleContainer","_templateObject7","InquiryItem","_templateObject8","BackButton","IoArrowBackSharp","_templateObject9","baseUrl","process","ReviewListPage","reviews","setReviews","useState","totalReviews","setTotalReviews","memberData","setMemberData","nickname","setNickname","navigate","useNavigate","console","log","useEffect","getMemberNo","then","res","JSON","stringify","memberNo","catch","error","async","formattedData","axios","get","concat","withCredentials","data","map","item","createdDate","Date","toLocaleDateString","year","month","day","length","fetchData","_jsx","_Fragment","children","_jsxs","onClick","handleBack","size","style","marginRight","BoardTitle","name","EmptyBoard","review","index","Link","to","reviewNo","farmName","StarRating","rating","reviewContent"],"sourceRoot":""}