{"version":3,"file":"static/js/8.a86f60de.chunk.js","mappings":"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","sources":["pages/member/mypage/review/ReviewDetail.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { IoArrowBackSharp } from 'react-icons/io5';\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport StarRating from \"../../../../components/board/StarRating\";\r\nimport ResultModal from \"../../../../components/modal/ResultModal\";\r\nimport useCustomMove from \"../../../../hooks/useCustomMove\";\r\n\r\nconst StyledContainer = styled.div`\r\n    background-color:white;\r\n    border-radius:0.6rem;\r\n    margin:1.5rem;\r\n`;\r\nconst FlexRowGap=styled.div`\r\n    display:flex;\r\n    flex-direction:row;\r\n    gap:0.5rem;\r\n    margin:1rem;\r\n    color:#878787;\r\n`;\r\nconst Buttons=styled.div`\r\n    display:flex;\r\n    flex-direction:row;\r\n    gap:1.5rem;\r\n    margin:1rem;\r\n    justify-content: flex-end;\r\n`\r\n\r\nconst DivLine=styled.div`\r\n    background: #90C8AC;\r\n    width: 100%;\r\n    height: 0.1em;\r\n    margin-top:1.5rem;\r\n`\r\nconst Content=styled.div`\r\n    font-size : 0.8rem;\r\n    margin:2rem 0 2rem 1rem;   \r\n    height: 15rem;\r\n`\r\nexport const FormItem = styled.div`\r\n    font-weight: 500;\r\n    margin-top:1rem;\r\n    & input {\r\n        width: ${(props) => (props.width ? props.width : '100%')};\r\n        border: 0.1rem solid lightgray;\r\n        padding: 1rem;\r\n        box-sizing: border-box;\r\n        border-radius: 1rem;\r\n    }\r\n    & textarea {\r\n        width: ${(props) => (props.width ? props.width : '100%')};\r\n        border: 0.1rem solid lightgray; \r\n        padding: 1rem;\r\n        box-sizing: border-box;\r\n        border-radius: 1rem;\r\n        height: 15rem;\r\n    }\r\n`;\r\nconst Writer=styled.div`\r\n    font-size:1rem;\r\n    font-weight:600;\r\n    margin: 1rem;\r\n`\r\nconst TextRating=styled.div`\r\n    font-size:1rem;\r\n    font-weight:600;\r\n    color:#878787;\r\n`\r\nconst DateText=styled.div`\r\n    margin:1rem;\r\n    font-size:0.8rem;\r\n    color:#878787;\r\n    text-align:left;\r\n`\r\nexport const BackButton = styled(IoArrowBackSharp)`\r\n  color: var(--color-textgrey);\r\n  cursor: pointer;\r\n`;\r\nconst baseUrl = process.env.REACT_APP_BASE_URL;\r\nconst ReviewDetail =()=>{\r\n    const { reviewNo } = useParams();\r\n    const [reviewDetail, setReviewDetail] = useState(null);\r\n    const navigate = useNavigate();\r\n    const [resultMessage, setResultMessage] = useState(null);\r\n    const { moveToMyReview } = useCustomMove();\r\n    const fetchReviewDetail = async () => {\r\n    try {\r\n        const response = await axios.get(`${baseUrl}/review/${reviewNo}`, {\r\n            withCredentials: true,\r\n        });\r\n        \r\n        const reviewData = response.data;\r\n\r\n        const createdDate = new Date(reviewData.createdDate);\r\n\r\n        // 원하는 형식의 날짜\r\n        const formattedDate = `${createdDate.getFullYear()}-${('0' + (createdDate.getMonth() + 1)).slice(-2)}-${('0' + createdDate.getDate()).slice(-2)} ${('0' + createdDate.getHours()).slice(-2)}:${('0' + createdDate.getMinutes()).slice(-2)}`;\r\n        reviewData.formattedDate = formattedDate;\r\n        setReviewDetail(reviewData); \r\n        console.log(reviewData);\r\n\r\n        } catch (error) {\r\n        console.error(\"Error fetching review detail:\", error);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchReviewDetail();\r\n    }, [reviewNo]);\r\n     \r\n    const handleBack = () => {\r\n        navigate(-1); // 뒤로 가기\r\n    };\r\n    const handleEdit = () => {\r\n        // 수정 폼으로 이동\r\n        navigate(`/review/${reviewNo}/edit`);\r\n    };\r\n    const handleDelete = async()=>{\r\n        try{\r\n            await axios.delete(`${baseUrl}/review/delete/${reviewNo}`, {\r\n                withCredentials: true,\r\n            });\r\n            setResultMessage({\r\n                title: '',\r\n                content: '리뷰가 삭제되었습니다.',\r\n                type: 'success',\r\n            });\r\n            \r\n        }catch(error){\r\n            console.log(\"Error deleting review:\", error);\r\n        }\r\n    };\r\n    const closeModal = () => {\r\n        setResultMessage(null);\r\n        moveToMyReview(reviewDetail.memberNo);\r\n    };\r\n \r\n    return (\r\n        <>\r\n        <StyledContainer>\r\n            <BackButton onClick={handleBack} size=\"20\" />\r\n            \r\n            <Writer>{reviewDetail && reviewDetail.farmName}</Writer>\r\n            <FlexRowGap>\r\n                <StarRating rating={reviewDetail && reviewDetail.rating} size='1rem'/>\r\n                <TextRating>{reviewDetail && reviewDetail.rating.toFixed(1)}</TextRating>                \r\n            </FlexRowGap>              \r\n            <DivLine/>                 \r\n            <Content>{reviewDetail && reviewDetail.reviewContent}</Content>\r\n            <DivLine/>\r\n            <DateText>{reviewDetail && reviewDetail.formattedDate}</DateText>\r\n            <Buttons>\r\n                <button \r\n                    onClick={handleEdit}\r\n                    className=\"block rounded-md bg-[#80BCBD] text-white font-semibold py-1 px-2.5\"\r\n                    style={{ fontSize: '0.8rem' }}>수정</button>\r\n                <button \r\n                    onClick={handleDelete}\r\n                    className=\"block rounded-md bg-[#D9D9D9] text-white font-semibold py-1 px-2.5\"\r\n                    style={{ fontSize: '0.8rem' }}>삭제</button>\r\n            </Buttons>\r\n        </StyledContainer>\r\n        {resultMessage && (\r\n                <ResultModal\r\n                    title={resultMessage.title}\r\n                    content={resultMessage.content}\r\n                    callbackFnc={closeModal}\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n};\r\nexport default ReviewDetail;"],"names":["StyledContainer","styled","div","_templateObject","_taggedTemplateLiteral","FlexRowGap","_templateObject2","Buttons","_templateObject3","DivLine","_templateObject4","Content","_templateObject5","FormItem","_templateObject6","props","width","Writer","_templateObject7","TextRating","_templateObject8","DateText","_templateObject9","BackButton","IoArrowBackSharp","_templateObject10","baseUrl","process","ReviewDetail","reviewNo","useParams","reviewDetail","setReviewDetail","useState","navigate","useNavigate","resultMessage","setResultMessage","moveToMyReview","useCustomMove","useEffect","async","reviewData","axios","get","concat","withCredentials","data","createdDate","Date","formattedDate","getFullYear","getMonth","slice","getDate","getHours","getMinutes","console","log","error","fetchReviewDetail","_jsxs","_Fragment","children","_jsx","onClick","handleBack","size","farmName","StarRating","rating","toFixed","reviewContent","handleEdit","className","style","fontSize","delete","title","content","type","ResultModal","callbackFnc","closeModal","memberNo"],"sourceRoot":""}