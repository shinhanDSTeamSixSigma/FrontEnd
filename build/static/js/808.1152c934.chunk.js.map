{"version":3,"file":"static/js/808.1152c934.chunk.js","mappings":"kIAAe,SAASA,EAAUC,GAAqB,IAApB,KAAEC,EAAI,QAAEC,GAASF,EAKhD,OACIG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAA,UACIG,KAAK,SACLC,MARQ,CAChBC,MAAO,OACPC,OAAQ,OAOAC,MAAM,sIACNR,QAASA,EAAQG,SAEhBJ,KAMjB,C,sECjBA,MAAMU,EAAWC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+CAIZ,SAASC,IACtB,OACEb,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACQ,EAAQ,KAGf,C,gFCTA,MAAMM,EAAUL,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0EAMX,SAASG,EAAgBC,GACtC,OACEC,EAAAA,EAAAA,MAAAhB,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACc,EAAO,CAAAZ,SAAEc,EAAMlB,QAChBE,EAAAA,EAAAA,KAACa,EAAAA,EAAiB,MAGxB,C,sECdA,MAAMC,EAAUL,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0EAMX,SAASM,EAAUF,GAChC,OACEhB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACc,EAAO,CAAAZ,SAAEc,EAAMlB,QAGtB,C,qJCXA,MAAMqB,EAAUV,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wDAIpBQ,EAAgBX,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,+BAG1BU,EAAYb,EAAAA,GAAOC,IAAGa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,ufAStBY,EAAYf,EAAAA,GAAOgB,IAAGC,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,wGAMtBe,EAAG,GAAAC,OAAMC,EAAAA,IA4Df,EA1DiBhC,IAAoC,IAAnC,UAAEiC,EAAS,OAAEC,EAAM,OAAEC,GAAQnC,EAC3C,MAQMoC,EAAa,CACfC,SAAU,MACVC,MAAO,WAEX,OACInC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIe,EAAAA,EAAAA,MAACE,EAAO,CAACf,MAAO,CAAEgC,OAAQ,uBAAwBlC,SAAA,EAC9CF,EAAAA,EAAAA,KAACsB,EAAS,CAAApB,SACL6B,IACG/B,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAACwB,EAAS,CACNa,IAAG,GAAAT,OAAKD,EAAG,KAAAC,OAAIG,EAAOO,cAMtCrB,EAAAA,EAAAA,MAACG,EAAa,CAAChB,MAAO,CAAEmC,YAAa,QAASrC,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,OAAKI,MA1BJ,CACboC,WAAY,MACZN,SAAU,SAwBuBhC,SAAE8B,EAAOS,YAC9BzC,EAAAA,EAAAA,KAAA,OAAKI,MAvBJ,CACboC,WAAY,MACZN,SAAU,SAqBuBhC,SAChB6B,IAAU/B,EAAAA,EAAAA,KAAA,OAAAE,SAAM6B,EAAOW,cAE5B1C,EAAAA,EAAAA,KAACmB,EAAO,CAAAjB,SACH4B,EAAUa,KAAI,CAACC,EAASC,KACrB5B,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAKI,MAAO6B,EAAW/B,SAAE0C,EAAQ9C,QACjCmB,EAAAA,EAAAA,MAAA,OAAKb,MAAO6B,EAAW/B,SAAA,EACjB0C,EAAQE,MAAQF,EAAQG,UACrBC,WACAC,QAAQ,wBAAyB,KAAK,cALzCJ,WAYtB7C,EAAAA,EAAAA,KAACoB,EAAa,CAAChB,MAAO,CAAE8C,WAAY,QAAShD,UACzCF,EAAAA,EAAAA,KAACmB,EAAO,CAAAjB,SACH4B,EAAUa,KAAI,CAACC,EAASC,KACrB7C,EAAAA,EAAAA,KAAA,OAAAE,UACIe,EAAAA,EAAAA,MAAA,OAAAf,SAAA,CAAK,IAAE0C,EAAQG,aADTF,aAO3B,E,wCCzEX,MAAM1B,EAAUV,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wDAIpBuC,EAAS1C,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,2EAKnBwC,EAAc3C,EAAAA,GAAOC,IAAGa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,6EA4H9B,EAtHmBf,IAA6C,IAA5C,SAAEwD,EAAQ,QAAEC,EAAO,MAAEC,EAAK,SAAEC,GAAU3D,EACtD,MAAM4D,GAAWC,EAAAA,EAAAA,OACX,WAAEC,GAAeF,EAASG,OAEzBC,EAAQC,IAAYC,EAAAA,EAAAA,UAAS,IAC7BC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,OAEnDG,EAAAA,EAAAA,YAAU,KACNC,GAAW,GACZ,CAACd,EAAUC,IAEd,MAAMa,EAAYA,KACdC,EAAAA,EACKC,IAAI,GAADzC,OAAI0B,EAAO,sBAAsB,CACjCgB,OAAQ,CACJjB,SAAUA,GAEdkB,iBAAiB,IAEpBC,MAAMC,IACHX,EAASW,EAAIC,KAAK,IAErBC,OAAOC,IACJC,QAAQC,IAAIF,EAAM,GACpB,EAyBV,OACI3D,EAAAA,EAAAA,MAAAhB,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAACe,EAAAA,EAAe,CAACjB,KAAK,wBAEtBmB,EAAAA,EAAAA,MAAA,OAAKb,MAAO,CAAEgC,OAAQ,uBAAwBlC,SAAA,EAC1Ce,EAAAA,EAAAA,MAACE,EAAO,CAAAjB,SAAA,EACJF,EAAAA,EAAAA,KAAA,OACI+E,UAAU,mBACV3E,MAAO,CAAEC,MAAO,QAASkC,YAAa,QAASrC,UAE/CF,EAAAA,EAAAA,KAAA,SACIG,KAAK,OACLI,MAAM,eACN,aAAW,uBACX,mBAAiB,4BACjByE,YACIzB,EAAQ,IAAMI,EAAWsB,eAAe,SAE5CC,UAAQ,OAGhBlF,EAAAA,EAAAA,KAAA,UACID,QAASA,IACLwD,OA5ChBI,EAAaE,EACbI,EAAiB,CACbkB,MAAO,GACPC,QAAS,8GACTjF,KAAM,aAKd2D,GAAUuB,GAAYA,EAAU1B,IAEhCH,GAAS,MAGTM,GAAUuB,GAAYA,EAAU1B,SAEhCH,GAAS,IA8BOrD,KAAK,SACL4E,UAAU,4BACV3E,MAAO,CACHC,MAAO,OACPC,OAAQ,SACR4B,SAAU,SACZhC,SACL,kCAILF,EAAAA,EAAAA,KAACmB,EAAO,CAACf,MAAO,CAAEgC,OAAQ,8BAA+BlC,UACrDe,EAAAA,EAAAA,MAACE,EAAO,CAACf,MAAO,CAAE8B,SAAU,MAAOC,MAAO,WAAYjC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,qCACLF,EAAAA,EAAAA,KAAA,OAAAE,SAAM2D,EAAOoB,eAAe,YAC5BjF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,eAKjBe,EAAAA,EAAAA,MAAA,OAAKb,MAAO,CAAEgC,OAAQ,aAAclC,SAAA,EAChCF,EAAAA,EAAAA,KAACa,EAAAA,EAAiB,KAClBI,EAAAA,EAAAA,MAACE,EAAO,CAACf,MAAO,CAAEgC,OAAQ,2BAA4BlC,SAAA,EAClDF,EAAAA,EAAAA,KAACmD,EAAM,CAAAjD,SAAC,+BACRe,EAAAA,EAAAA,MAACE,EAAO,CAACf,MAAO,CAAE8C,WAAY,QAAShD,SAAA,EACnCF,EAAAA,EAAAA,KAACoD,EAAW,CAAAlD,SACPqD,EAAQI,EAAWsB,eAAe,SAAW,OAGlDjF,EAAAA,EAAAA,KAACoD,EAAW,CAAAlD,SAAC,kBAGrBF,EAAAA,EAAAA,KAACa,EAAAA,EAAiB,OAErBmD,IACGhE,EAAAA,EAAAA,KAACsF,EAAAA,EAAW,CACRH,MAAOnB,EAAcmB,MACrBC,QAASpB,EAAcoB,QACvBG,YAlEGC,KACfvB,EAAiB,KAAK,MAoEnB,E,MC/HX,MAAMX,EAAUmC,wBAEVC,EAAkBjF,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0GAqJlC,EA9IqB+E,KAGjB,MAEOC,EAAYC,IAAiB9B,EAAAA,EAAAA,UAAS,MAEvC+B,GAAWC,EAAAA,EAAAA,MACXtC,GAAWC,EAAAA,EAAAA,OACX,UAAE5B,EAAS,WAAE6B,EAAU,OAAE5B,EAAM,OAAEC,GAAWyB,EAASG,OACpDI,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,OAG5CR,EAAOyC,IAAYjC,EAAAA,EAAAA,WAAS,GAyFnC,OAZAG,EAAAA,EAAAA,YAAU,MAEN+B,EAAAA,EAAAA,MACKzB,MAAMC,IACHoB,EAAcpB,EAAIpB,SAAS,IAE9BsB,OAAOC,IACJC,QAAQC,IAAI,yCACZD,QAAQD,MAAMA,EAAM,GACtB,GACP,CAACgB,KAGA3E,EAAAA,EAAAA,MAAAhB,EAAAA,SAAA,CAAAC,SAAA,EACIe,EAAAA,EAAAA,MAACyE,EAAe,CAAAxF,SAAA,EACZF,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CAACpB,KAAK,8BAChBE,EAAAA,EAAAA,KAACe,EAAAA,EAAe,CAACjB,KAAK,+BACtBE,EAAAA,EAAAA,KAACkG,EAAQ,CACLpE,UAAWA,EACXC,OAAQA,EACRC,OAAQA,KAEZhC,EAAAA,EAAAA,KAACmG,EAAU,CACP9C,SAAUuC,EACVtC,QAASA,EACTC,MAAOA,EACPC,SAAUwC,QAGlBhG,EAAAA,EAAAA,KAACJ,EAAAA,EAAU,CACPE,KAAK,2BACLC,QAASA,IACLwD,EAEMU,EAAiB,CACbkB,MAAO,GACPC,QAAS,8EACTjF,KAAM,YAhHNiG,WACtB,IACI,IAAIC,EACAC,EACAC,EAASzE,EAAU,GAAG0E,aAG1B,GAAe,IAAXD,EACAF,EAAc,CACVI,WAAY9C,EACZ+C,YAAa,EACbC,YAAa,EAEbtD,SAAUuC,EACVgB,OA1BD,GA4BHN,EAAM,GAAA1E,OAAM0B,EAAO,4BAChB,GAAe,IAAXiD,EAAc,CAErB,MAaMK,SAbqBxC,EAAAA,EAAMyC,KAAK,GAADjF,OAC9B0B,EAAO,sBACV,CACIwD,aAAc/E,EAAOW,SACrBqE,UAAW,EACX1D,SAAUuC,EACVoB,OAAQjF,EAAOkF,WACfC,OAAQlF,EAAOkF,QAEnB,CAAE3C,iBAAiB,KAIKG,KAC5BG,QAAQC,IAAI,UAAW8B,GAGvBP,EAAc,CACVI,WAAY9C,EACZ+C,YAAa,EACbC,YAAa,EACbtD,SAAUuC,EACVgB,OAAQA,GAEZN,EAAM,GAAA1E,OAAM0B,EAAO,sBACvB,CAGA,MAAM6D,QAAiB/C,EAAAA,EAAMyC,KAAKP,EAAQD,GAG1CxB,QAAQC,IAAI,0EAAoBqC,EAASzC,MAC1B,IAAX6B,EAEAtC,EAAiB,CACbkB,MAAO,GACPC,QAAS,8EACTjF,KAAM,YAEQ,IAAXoG,GAEPtC,EAAiB,CACbkB,MAAO,GACPC,QAAS,wEACTjF,KAAM,YAGd2F,EAAS,UACb,CAAE,MAAOlB,GACLC,QAAQD,MAAM,2BAA4BA,EAC9C,GA6CkBwC,KAGbpD,IACGhE,EAAAA,EAAAA,KAACsF,EAAAA,EAAW,CACRH,MAAOnB,EAAcmB,MACrBC,QAASpB,EAAcoB,QACvBG,YAjDGC,KACfvB,EAAiB,KAAK,MAmDnB,C","sources":["components/FullButton.js","components/TitleDivisionLine.js","components/point/TitleDetailName.js","components/point/TitleName.js","components/point/CropInfo.js","components/point/PointApply.js","pages/member/mypage/point/PayApplyPage.js"],"sourcesContent":["export default function FullButton({ name, onClick }) {\r\n    const buttonStyle = {\r\n        width: '100%',\r\n        height: '3em',\r\n    };\r\n    return (\r\n        <>\r\n            <button\r\n                type=\"button\"\r\n                style={buttonStyle}\r\n                class=\"rounded-md bg-[#80BCBD] px-2.5 py-1.5 text-sm font-semibold text-white shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-[#4F6F52]\"\r\n                onClick={onClick}\r\n            >\r\n                {name}\r\n            </button>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Division = styled.div`\r\n  border-top: 0.2rem solid #90c8ac;\r\n`;\r\n\r\nexport default function TitleDivisionLine() {\r\n  return (\r\n    <>\r\n      <Division></Division>\r\n    </>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport TitleDivisionLine from '../TitleDivisionLine';\r\n\r\nconst TextCss = styled.div`\r\n  font-weight: 600;\r\n  font-size: 1em;\r\n  margin: 0.3rem auto;\r\n`;\r\n\r\nexport default function TitleDetailName(props) {\r\n  return (\r\n    <>\r\n      <TextCss>{props.name}</TextCss>\r\n      <TitleDivisionLine />\r\n    </>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst TextCss = styled.div`\r\n  font-weight: 700;\r\n  font-size: 1.3em;\r\n  margin: 1rem auto;\r\n`;\r\n\r\nexport default function TitleName(props) {\r\n  return (\r\n    <>\r\n      <TextCss>{props.name}</TextCss>\r\n    </>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { prefix } from '../../api/farmApi';\r\n\r\nconst FlexRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\nconst ContentMargin = styled.div`\r\n    margin: auto 0;\r\n`;\r\nconst FarmImage = styled.div`\r\n    width: 6.5rem;\r\n    height: 6.5rem;\r\n    margin-right: 1rem;\r\n    border-radius: 0.8rem;\r\n    display: flex; /* 이미지를 수평으로 정렬하기 위해 flex 사용 */\r\n    align-items: center; /* 이미지를 수직으로 중앙에 정렬하기 위해 사용 */\r\n    overflow: hidden; /* 이미지가 div를 벗어나지 않도록 함 */\r\n`;\r\nconst CropImage = styled.img`\r\n    width: 6.5rem;\r\n    height: 6.5rem;\r\n    margin-right: 1rem;\r\n    border-radius: 0.8rem;\r\n`;\r\nconst url = `${prefix}`;\r\n\r\nconst CropInfo = ({ cartItems, myCrop, myFarm }) => {\r\n    const farmName = {\r\n        fontWeight: '600',\r\n        fontSize: '0.8em',\r\n    };\r\n    const cropName = {\r\n        fontWeight: '600',\r\n        fontSize: '1.4em',\r\n    };\r\n    const detailName = {\r\n        fontSize: '1em',\r\n        color: '#878787',\r\n    };\r\n    return (\r\n        <>\r\n            <FlexRow style={{ margin: '1rem 1rem 2rem 1rem' }}>\r\n                <FarmImage>\r\n                    {myCrop && (\r\n                        <div>\r\n                            <CropImage\r\n                                src={`${url}/${myCrop.image}`}\r\n                                // style={{ width: '100%', objectFit: 'cover' }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </FarmImage>\r\n                <ContentMargin style={{ marginRight: '2rem' }}>\r\n                    <div style={farmName}>{myFarm.farmName}</div>\r\n                    <div style={cropName}>\r\n                        {myCrop && <div>{myCrop.cropName}</div>}\r\n                    </div>\r\n                    <FlexRow>\r\n                        {cartItems.map((element, idx) => (\r\n                            <div key={idx}>\r\n                                <div style={detailName}>{element.name}</div>\r\n                                <div style={detailName}>\r\n                                    {(element.price * element.quantity)\r\n                                        .toString()\r\n                                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                    원\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </FlexRow>\r\n                </ContentMargin>\r\n                <ContentMargin style={{ marginLeft: 'auto' }}>\r\n                    <FlexRow>\r\n                        {cartItems.map((element, idx) => (\r\n                            <div key={idx}>\r\n                                <div>x{element.quantity}</div>\r\n                            </div>\r\n                        ))}\r\n                    </FlexRow>\r\n                </ContentMargin>\r\n            </FlexRow>\r\n        </>\r\n    );\r\n};\r\nexport default CropInfo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport TitleDetailName from './TitleDetailName';\r\nimport TitleDivisionLine from '../TitleDivisionLine';\r\nimport styled from 'styled-components';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ResultModal from '../modal/ResultModal';\r\n\r\nconst FlexRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\nconst PayCss = styled.div`\r\n    font-weight: 600;\r\n    font-size: 1em;\r\n    margin: auto 0;\r\n`;\r\nconst FinalPayCss = styled.div`\r\n    font-weight: 600;\r\n    font-size: 1.3em;\r\n    color: #4f6f52;\r\n`;\r\n\r\nconst PointApply = ({ memberNo, baseUrl, isOff, onToggle }) => {\r\n    const location = useLocation(); // useLocation 훅을 사용하여 현재 위치의 정보를 가져옵니다.\r\n    const { totalPrice } = location.state;\r\n\r\n    const [points, setPoint] = useState(0);\r\n    const [resultMessage, setResultMessage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [memberNo, baseUrl]);\r\n\r\n    const fetchData = () => {\r\n        axios\r\n            .get(`${baseUrl}/pay/current-point`, {\r\n                params: {\r\n                    memberNo: memberNo,\r\n                },\r\n                withCredentials: true,\r\n            })\r\n            .then((res) => {\r\n                setPoint(res.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const handleMinusPoint = () => {\r\n        if (totalPrice > points) {\r\n            setResultMessage({\r\n                title: '',\r\n                content: '포인트가 부족합니다. 충전이 필요합니다.',\r\n                type: 'success',\r\n            });\r\n            return;\r\n        }\r\n\r\n        setPoint((current) => current - totalPrice);\r\n        //setIsOff(false);\r\n        onToggle(false);\r\n    };\r\n    const handlePlusPoint = () => {\r\n        setPoint((current) => current + totalPrice);\r\n        //setIsOff(true);\r\n        onToggle(true);\r\n    };\r\n    const closeModal = () => {\r\n        setResultMessage(null);\r\n    };\r\n    return (\r\n        <>\r\n            <TitleDetailName name=\"포인트\" />\r\n            {/*포인트 결제란*/}\r\n            <div style={{ margin: '1rem 1rem 2rem 1rem' }}>\r\n                <FlexRow>\r\n                    <div\r\n                        className=\"input-group mb-3\"\r\n                        style={{ width: '12rem', marginRight: '1rem' }}\r\n                    >\r\n                        <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            aria-label=\"Sizing example input\"\r\n                            aria-describedby=\"inputGroup-sizing-default\"\r\n                            placeholder={\r\n                                isOff ? '0' : totalPrice.toLocaleString('ko-KR')\r\n                            }\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        onClick={() =>\r\n                            isOff ? handleMinusPoint() : handlePlusPoint()\r\n                        }\r\n                        type=\"button\"\r\n                        className=\"btn btn-outline-secondary\"\r\n                        style={{\r\n                            width: '5rem',\r\n                            height: '2.4rem',\r\n                            fontSize: '0.8em',\r\n                        }}\r\n                    >\r\n                        전체 사용\r\n                    </button>\r\n                </FlexRow>\r\n                <FlexRow style={{ margin: '-1rem 0.5rem 0.5rem 0.5rem' }}>\r\n                    <FlexRow style={{ fontSize: '1em', color: '#878787' }}>\r\n                        <div>보유 포인트</div>\r\n                        <div>{points.toLocaleString('ko-KR')}</div>\r\n                        <div>P</div>\r\n                    </FlexRow>\r\n                </FlexRow>\r\n            </div>\r\n            {/*총 결제 금액*/}\r\n            <div style={{ margin: '3rem auto' }}>\r\n                <TitleDivisionLine />\r\n                <FlexRow style={{ margin: '0.5rem 1rem 0.5rem 1rem' }}>\r\n                    <PayCss>결제 금액</PayCss>\r\n                    <FlexRow style={{ marginLeft: 'auto' }}>\r\n                        <FinalPayCss>\r\n                            {isOff ? totalPrice.toLocaleString('ko-KR') : '0'}\r\n                        </FinalPayCss>\r\n\r\n                        <FinalPayCss>원</FinalPayCss>\r\n                    </FlexRow>\r\n                </FlexRow>\r\n                <TitleDivisionLine />\r\n            </div>\r\n            {resultMessage && (\r\n                <ResultModal\r\n                    title={resultMessage.title}\r\n                    content={resultMessage.content}\r\n                    callbackFnc={closeModal}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default PointApply;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { getMemberNo } from '../../../../api/farmApi';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport TitleName from '../../../../components/point/TitleName';\r\nimport TitleDetailName from '../../../../components/point/TitleDetailName';\r\nimport CropInfo from '../../../../components/point/CropInfo';\r\nimport FullButton from '../../../../components/FullButton';\r\nimport PointApply from '../../../../components/point/PointApply';\r\nimport ResultModal from '../../../../components/modal/ResultModal';\r\n\r\nconst baseUrl = process.env.REACT_APP_BASE_URL;\r\n\r\nconst StyledContainer = styled.div`\r\n    color: black;\r\n    font-size: 0.8em;\r\n    margin: auto 1.5rem auto;\r\n    margin-top: 2rem;\r\n`;\r\n\r\nconst PayApplyPage = () => {\r\n    // const crop = location.state.crop;\r\n    // const cropNo = crop.cropNo;\r\n    const cropNo = 1;\r\n\r\n    const [memberData, setMemberData] = useState(null); // 농부의 memberNo\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation(); // 현재 위치\r\n    const { cartItems, totalPrice, myCrop, myFarm } = location.state;\r\n    const [resultMessage, setResultMessage] = useState(null);\r\n\r\n    //버튼 토글 상태\r\n    const [isOff, setIsOff] = useState(true);\r\n\r\n    const handleButtonClick = async () => {\r\n        try {\r\n            let requestData;\r\n            let apiUrl;\r\n            let status = cartItems[0].optionNumber; //1: 땅, 2: 비료\r\n\r\n            // 어떤 작업을 할지를 동적으로 결정\r\n            if (status === 2) {\r\n                requestData = {\r\n                    pointValue: totalPrice, // 결제 금액\r\n                    changeValue: 1,\r\n                    changeCause: 4, // 영양제 구매\r\n\r\n                    memberNo: memberData,\r\n                    cropNo: cropNo,\r\n                };\r\n                apiUrl = `${baseUrl}/pay/register-point`;\r\n            } else if (status === 1) {\r\n                // cropEntity 등록 요청\r\n                const cropResponse = await axios.post(\r\n                    `${baseUrl}/pay/register-crop`,\r\n                    {\r\n                        cropNickname: myCrop.cropName,\r\n                        cropState: 2,\r\n                        memberNo: memberData,\r\n                        dictNo: myCrop.cropDictNo,\r\n                        farmNo: myFarm.farmNo,\r\n                    },\r\n                    { withCredentials: true },\r\n                );\r\n\r\n                // cropEntity 등록 후 서버 응답에서 cropNo 추출\r\n                const cropNo = cropResponse.data;\r\n                console.log('cropNo:', cropNo);\r\n\r\n                // pointEntity에 cropNo 설정\r\n                requestData = {\r\n                    pointValue: totalPrice,\r\n                    changeValue: 1,\r\n                    changeCause: 3,\r\n                    memberNo: memberData,\r\n                    cropNo: cropNo, // 추출한 cropNo 설정\r\n                };\r\n                apiUrl = `${baseUrl}/pay/register-point`;\r\n            }\r\n\r\n            // 포인트 결제 등록 요청\r\n            const response = await axios.post(apiUrl, requestData);\r\n\r\n            // 포인트 결제 등록 성공 시 처리\r\n            console.log('포인트 결제 내역 등록 성공:', response.data);\r\n            if (status === 2) {\r\n                //alert('비료 구매가 완료되었습니다.');\r\n                setResultMessage({\r\n                    title: '',\r\n                    content: '비료 구매가 완료되었습니다.',\r\n                    type: 'success',\r\n                });\r\n            } else if (status === 1) {\r\n                //alert('땅 등록이 완료되었습니다.');\r\n                setResultMessage({\r\n                    title: '',\r\n                    content: '땅 등록이 완료되었습니다.',\r\n                    type: 'success',\r\n                });\r\n            }\r\n            navigate('/mypage');\r\n        } catch (error) {\r\n            console.error('Error registering point:', error);\r\n        }\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setResultMessage(null);\r\n    };\r\n    useEffect(() => {\r\n        // 서버에서 사용자 정보 가져오기\r\n        getMemberNo()\r\n            .then((res) => {\r\n                setMemberData(res.memberNo);\r\n            })\r\n            .catch((error) => {\r\n                console.log('데이터 안옴!!!!!!');\r\n                console.error(error);\r\n            });\r\n    }, [memberData]);\r\n\r\n    return (\r\n        <>\r\n            <StyledContainer>\r\n                <TitleName name=\"결제하기\" />\r\n                <TitleDetailName name=\"구매 정보\" />\r\n                <CropInfo\r\n                    cartItems={cartItems}\r\n                    myCrop={myCrop}\r\n                    myFarm={myFarm}\r\n                />\r\n                <PointApply\r\n                    memberNo={memberData}\r\n                    baseUrl={baseUrl}\r\n                    isOff={isOff}\r\n                    onToggle={setIsOff}\r\n                />\r\n            </StyledContainer>\r\n            <FullButton\r\n                name=\"결제하기\"\r\n                onClick={() =>\r\n                    isOff\r\n                        ? //alert('포인트 사용을 선택해주세요.')\r\n                          setResultMessage({\r\n                              title: '',\r\n                              content: '포인트 사용을 선택해주세요.',\r\n                              type: 'success',\r\n                          })\r\n                        : handleButtonClick()\r\n                }\r\n            />\r\n            {resultMessage && (\r\n                <ResultModal\r\n                    title={resultMessage.title}\r\n                    content={resultMessage.content}\r\n                    callbackFnc={closeModal}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default PayApplyPage;\r\n"],"names":["FullButton","_ref","name","onClick","_jsx","_Fragment","children","type","style","width","height","class","Division","styled","div","_templateObject","_taggedTemplateLiteral","TitleDivisionLine","TextCss","TitleDetailName","props","_jsxs","TitleName","FlexRow","ContentMargin","_templateObject2","FarmImage","_templateObject3","CropImage","img","_templateObject4","url","concat","prefix","cartItems","myCrop","myFarm","detailName","fontSize","color","margin","src","image","marginRight","fontWeight","farmName","cropName","map","element","idx","price","quantity","toString","replace","marginLeft","PayCss","FinalPayCss","memberNo","baseUrl","isOff","onToggle","location","useLocation","totalPrice","state","points","setPoint","useState","resultMessage","setResultMessage","useEffect","fetchData","axios","get","params","withCredentials","then","res","data","catch","error","console","log","className","placeholder","toLocaleString","disabled","title","content","current","ResultModal","callbackFnc","closeModal","process","StyledContainer","PayApplyPage","memberData","setMemberData","navigate","useNavigate","setIsOff","getMemberNo","CropInfo","PointApply","async","requestData","apiUrl","status","optionNumber","pointValue","changeValue","changeCause","cropNo","post","cropNickname","cropState","dictNo","cropDictNo","farmNo","response","handleButtonClick"],"sourceRoot":""}