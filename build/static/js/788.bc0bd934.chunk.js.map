{"version":3,"file":"static/js/788.bc0bd934.chunk.js","mappings":"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","sources":["pages/member/mypage/inquiry/InquiryListPage.js"],"sourcesContent":["import styled, { css } from 'styled-components';\r\nimport { MdVisibility } from 'react-icons/md';\r\nimport axios from 'axios';\r\nimport { IoArrowBackSharp } from 'react-icons/io5';\r\nimport BoardTitle from '../../../../components/board/BoardTitle';\r\nimport EmptyBoard from '../../../../components/board/EmptyBoard';\r\nimport Button from '../../../../components/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getMemberNo } from '../../../../api/farmApi';\r\n\r\nconst StyledContainer = styled.div`\r\n    background-color: white;\r\n    border-radius: 0.6rem;\r\n    margin: 1.5rem;\r\n`;\r\nconst FlexRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin: 0.5rem 1rem 1rem 0;\r\n`;\r\nconst FlexRowGap = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 2rem;\r\n    font-size: 0.8rem;\r\n    color: #878787;\r\n`;\r\nconst Title = styled.div`\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n`;\r\nconst Totalcnt = styled.div`\r\n    font-size: 0.8rem;\r\n    font-weight: 500;\r\n    color: #878787;\r\n    margin: 0.5rem 0 0 0.8rem;\r\n`;\r\nconst Content = styled.div`\r\n    font-size: 0.8rem;\r\n    font-weight: 500;\r\n`;\r\nconst RepliedFont = styled.div`\r\n    ${(props) =>\r\n        props.isReplied &&\r\n        css`\r\n            color: #4f6f52;\r\n            font-size: 0.8rem;\r\n\r\n            font-weight: 600;\r\n        `}\r\n\r\n    ${(props) =>\r\n        !props.isReplied &&\r\n        css`\r\n            color: #90c8ac;\r\n            font-size: 0.8rem;\r\n            font-weight: 600;\r\n        `}\r\n`;\r\nconst ViewsContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\nconst InquiryItem = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.2rem;\r\n    border: 0.1rem solid lightgray;\r\n    border-radius: 1rem;\r\n    padding: 1.5rem 1.5rem;\r\n    margin-top: 1rem;\r\n    cursor: pointer;\r\n`;\r\nexport const BackButton = styled(IoArrowBackSharp)`\r\n    color: var(--color-textgrey);\r\n    cursor: pointer;\r\n`;\r\n\r\nconst baseUrl = process.env.REACT_APP_BASE_URL;\r\nconst InquiryListPage = () => {\r\n    const [inquires, setInquiries] = useState([]);\r\n    const [totalInquiries, setTotalInquiries] = useState(0);\r\n    const [memberData, setMemberData] = useState();\r\n    const [nickname, setNickname] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleBack = () => {\r\n        navigate('/mypage'); // 마이페이지로 이동\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                if (memberData && memberData.memberNo) {\r\n                    const response = await axios.get(\r\n                        `${baseUrl}/board/${memberData.memberNo}/inquiryList?categoryNo=1`,\r\n                        {\r\n                            withCredentials: true,\r\n                        },\r\n                    );\r\n\r\n                    // 날짜 형식 변환\r\n                    const formattedData = response.data.map((item) => ({\r\n                        ...item,\r\n                        createdDate: new Date(\r\n                            item.createdDate,\r\n                        ).toLocaleDateString('ko-KR', {\r\n                            year: 'numeric',\r\n                            month: '2-digit',\r\n                            day: '2-digit',\r\n                        }),\r\n                        isReplied: item.replied ? '답변완료' : '미답변',\r\n                    }));\r\n\r\n                    setInquiries(formattedData); // API에서 받아온 작물 목록을 상태에 업데이트\r\n                    setTotalInquiries(formattedData.length);\r\n                } else {\r\n                    console.error('Member data or memberNo is not defined.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching inquiries:', error);\r\n            }\r\n        };\r\n\r\n        fetchData(); // 데이터 가져오기 함수 호출\r\n    }, [memberData]);\r\n\r\n    useEffect(() => {\r\n        // 서버에서 사용자 정보 가져오기\r\n        getMemberNo()\r\n            .then((res) => {\r\n                setMemberData(res);\r\n                setNickname(res.nickname); // 닉네임 설정\r\n                console.log(res);\r\n\r\n                console.log('멤버데이터 ', JSON.stringify(res.memberNo));\r\n                // if (res.role !== 'FARMER') {\r\n                //     console.log(res.role);\r\n                //     alert('농부만 들어갈 수 있는 페이지 입니다!');\r\n                //     window.location.href = '/';\r\n                // }\r\n            })\r\n            .catch((error) => {\r\n                console.log('데이터 안옴!!!!!!');\r\n                console.error(error);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <StyledContainer>\r\n                <BackButton onClick={handleBack} size=\"20\" />\r\n                <FlexRow>\r\n                    <FlexRow style={{ marginRight: 'auto' }}>\r\n                        <BoardTitle name={`${nickname}의 문의`} />\r\n                        <Totalcnt>총 {totalInquiries}개의 문의</Totalcnt>\r\n                    </FlexRow>\r\n                    {/* <Link to={`/inquiry/${farmNo}/regist`}>\r\n                    <Button name=\"문의하기\" widthHeight= 'w-18 h-10'/>\r\n                </Link> */}\r\n                </FlexRow>\r\n\r\n                {inquires.length === 0 ? (\r\n                    <EmptyBoard name=\"작성하신 문의내역이 없습니다.\" />\r\n                ) : (\r\n                    inquires.map((inquiry, index) => (\r\n                        <Link to={`/inquiry/${inquiry.boardNo}/detail`}>\r\n                            <InquiryItem key={index}>\r\n                                <FlexRow>\r\n                                    <Title>{inquiry.title}</Title>\r\n                                    <RepliedFont isReplied={inquiry.replied}>\r\n                                        {' '}\r\n                                        {inquiry.replied\r\n                                            ? '답변완료'\r\n                                            : '미답변'}\r\n                                    </RepliedFont>\r\n                                </FlexRow>\r\n                                <Content>{inquiry.boardContent}</Content>\r\n                                <FlexRowGap>\r\n                                    <div>{inquiry.nickname}</div>\r\n                                    <div>{inquiry.createdDate}</div>\r\n                                    <ViewsContainer>\r\n                                        <MdVisibility\r\n                                            style={{ marginRight: '0.5rem' }}\r\n                                        />{' '}\r\n                                        {/* Icon component */}\r\n                                        <div>{inquiry.views}</div>\r\n                                    </ViewsContainer>\r\n                                </FlexRowGap>\r\n                            </InquiryItem>\r\n                        </Link>\r\n                    ))\r\n                )}\r\n            </StyledContainer>\r\n        </>\r\n    );\r\n};\r\nexport default InquiryListPage;\r\n"],"names":["StyledContainer","styled","div","_templateObject","_taggedTemplateLiteral","FlexRow","_templateObject2","FlexRowGap","_templateObject3","Title","_templateObject4","Totalcnt","_templateObject5","Content","_templateObject6","RepliedFont","_templateObject7","props","isReplied","css","_templateObject8","_templateObject9","ViewsContainer","_templateObject10","InquiryItem","_templateObject11","BackButton","IoArrowBackSharp","_templateObject12","InquiryListPage","inquires","setInquiries","useState","totalInquiries","setTotalInquiries","memberData","setMemberData","nickname","setNickname","navigate","useNavigate","useEffect","async","memberNo","formattedData","axios","get","concat","process","withCredentials","data","map","item","createdDate","Date","toLocaleDateString","year","month","day","replied","length","console","error","fetchData","getMemberNo","then","res","log","JSON","stringify","catch","_jsx","_Fragment","children","_jsxs","onClick","handleBack","size","style","marginRight","BoardTitle","name","EmptyBoard","inquiry","index","Link","to","boardNo","title","boardContent","MdVisibility","views"],"sourceRoot":""}