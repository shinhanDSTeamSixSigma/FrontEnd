{"version":3,"file":"static/js/356.220504f9.chunk.js","mappings":"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","sources":["components/board/ReviewStar.js","components/board/ReviewRegist.js","pages/member/mypage/review/ReviewEdit.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaStar, FaStarHalfAlt } from \"react-icons/fa\";\r\n\r\nconst StarContainer = styled.div`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  margin-left:0.5rem;\r\n`;\r\n\r\nconst StyledStar = styled(FaStar)`\r\n  color: ${({ active }) => (active ? \"#90C8AC\" : \"#ccc\")};\r\n  cursor: pointer;\r\n  font-size: ${({ size }) => size || \"24px\"}; /* 별 크기 설정 */\r\n`;\r\n\r\nconst StyledHalfStar = styled(FaStarHalfAlt)`\r\n  color: ${({ active }) => (active ? \"#90C8AC\" : \"#ccc\")};\r\n  cursor: pointer;\r\n  font-size: ${({ size }) => size || \"24px\"}; /* 별 크기 설정 */\r\n`;\r\n\r\nconst ReviewStar = ({ rating, setRating, size }) => {\r\n  const [hoveredRating, setHoveredRating] = useState(0);\r\n\r\n  const handleStarHover = (value) => {\r\n    setHoveredRating(value);\r\n  };\r\n\r\n  const handleStarClick = (value) => {\r\n    setRating(value);\r\n  };\r\n\r\n  const handleStarLeave = () => {\r\n    setHoveredRating(0);\r\n  };\r\n\r\n  return (\r\n    <StarContainer>\r\n      {[1, 2, 3, 4, 5].map((value) => {\r\n        const isActive = value <= (hoveredRating || rating);\r\n        const isHalf = (hoveredRating || rating) - value === -0.5;\r\n\r\n        return (\r\n          <span\r\n            key={value}\r\n            onMouseEnter={() => handleStarHover(value)}\r\n            onMouseLeave={handleStarLeave}\r\n            onClick={() => handleStarClick(value)}\r\n          >\r\n            {isHalf ? (\r\n              <>\r\n                <StyledHalfStar active={isActive} size={size} />\r\n                <StyledStar size={size} style={{ position: \"absolute\", left: \"0\" }} />\r\n              </>\r\n            ) : (\r\n              <StyledStar active={isActive} size={size} />\r\n            )}\r\n          </span>\r\n        );\r\n      })}\r\n    </StarContainer>\r\n  );\r\n};\r\n\r\nexport default ReviewStar;\r\n","import styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { IoArrowBackSharp } from 'react-icons/io5';\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport BoardTitle from \"./BoardTitle\";\r\nimport ReviewStar from \"./ReviewStar\";\r\nimport ResultModal from \"../modal/ResultModal\"; // ResultModal 추가\r\nimport { getMemberNo } from '../../api/farmApi';\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\n\r\nconst StyledContainer = styled.div`\r\n    background-color:white;\r\n    font-size:1em;\r\n    font-weight:600;\r\n    border-radius:0.8rem;\r\n`;\r\n\r\nconst FlexRow = styled.div`\r\n    display:flex;\r\n    flex-direction:row;\r\n    justify-content: space-between;\r\n    align-items:center;\r\n`;\r\n\r\nexport const FormItem = styled.div`\r\n    font-weight: 500;\r\n    margin-top:1rem;\r\n    & input {\r\n        width: ${(props) => (props.width ? props.width : '100%')};\r\n        border: 0.1rem solid lightgray;\r\n        padding: 1rem;\r\n        box-sizing: border-box;\r\n        border-radius: 1rem;\r\n    }\r\n    & textarea {\r\n        width: ${(props) => (props.width ? props.width : '100%')};\r\n        border: 0.1rem solid lightgray; \r\n        padding: 1rem;\r\n        box-sizing: border-box;\r\n        border-radius: 1rem;\r\n        height: 30rem;\r\n    }\r\n`;\r\n\r\nconst BackButton = styled(IoArrowBackSharp)`\r\n    color: var(--color-textgrey);\r\n    margin-bottom: 1rem;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst baseUrl = process.env.REACT_APP_BASE_URL;\r\n\r\nconst ReviewRegist = ({ rating: initialRating, content: initialContent, reviewNo, isEdit }) => {\r\n    const { farmNo } = useParams();\r\n    const { memberNo } = useParams();\r\n    const [content, setContent] = useState(initialContent || '');\r\n    const [rating, setRating] = useState(initialRating || '');\r\n    const navigate = useNavigate();\r\n    const [memberData, setMemberData] = useState();\r\n    const [response, setResponse] = useState(null); // 결과 메시지 상태 추가\r\n    const { memberMoveToRead, moveToMyReview } = useCustomMove();\r\n    useEffect(() => {\r\n        if (isEdit && initialRating && initialContent) {\r\n            setRating(initialRating);\r\n            setContent(initialContent);\r\n        }\r\n    }, [isEdit, initialRating, initialContent]);\r\n    \r\n    const onRatingChange = useCallback((newRating) => {\r\n        setRating(newRating);\r\n    }, []);\r\n    \r\n    const onChangeContent = useCallback((e) => {\r\n        setContent(e.target.value);\r\n    }, []);\r\n\r\n    const handleBack = () => {\r\n        navigate(-1);\r\n    };\r\n    const closeModal = () => {\r\n        setResponse(null);\r\n        if (isEdit) {\r\n            moveToMyReview(memberNo); // 수정된 리뷰일 경우 moveToMyReview로 이동\r\n        } else {\r\n            memberMoveToRead(farmNo); // 등록된 리뷰일 경우 memberMoveToRead로 이동\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        // 서버에서 사용자 정보 가져오기\r\n        getMemberNo()\r\n            .then((res) => {\r\n                setMemberData(res);\r\n                console.log(res);\r\n                console.log('멤버데이터 ', JSON.stringify(res.memberNo));\r\n                // if (res.role !== 'FARMER') {\r\n                //     console.log(res.role);\r\n                //     setResponse({ message: '농부만 들어갈 수 있는 페이지 입니다!', type: 'error' }); // 2. 오류 메시지 설정\r\n                // }\r\n            })\r\n            .catch((error) => {\r\n                console.log('데이터 안옴!!!!!!');\r\n                console.error(error);\r\n            });\r\n    }, []);\r\n\r\n    const handleRegisterOrUpdate = () => {\r\n        const url = isEdit ? `${baseUrl}/review/edit/${reviewNo}` : `${baseUrl}/review/regist`;\r\n        const method = isEdit ? 'put' : 'post';\r\n        axios({   \r\n            method : method,\r\n            url: url,\r\n            data: {\r\n                reviewContent: content,\r\n                rating: rating,\r\n                createdDate: new Date().toISOString(),\r\n                isDeleted: false, \r\n                memberNo: memberData.memberNo,\r\n                farmNo: farmNo \r\n            }     \r\n            \r\n        }).then((response) => {\r\n            if (isEdit) {\r\n                setResponse({ message: '리뷰가 수정되었습니다.', type: 'success' }); \r\n            } else {\r\n                setResponse({ message: '리뷰가 등록되었습니다.', type: 'success' }); \r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Error occured while registering the review:\", error);\r\n            setResponse({ message: '리뷰 등록 중 오류가 발생했습니다.', type: 'error' }); \r\n        });\r\n    };\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <BackButton onClick={handleBack} size=\"20\" />\r\n            <FlexRow>   \r\n                <BoardTitle name=\"리뷰하기\" />\r\n                <button \r\n                    onClick={handleRegisterOrUpdate}\r\n                    className=\"block rounded-md bg-[#80BCBD] text-white text-lg py-1.5 px-3\">\r\n                    {isEdit ? \"수정\" : \"등록\"}\r\n                </button>\r\n            </FlexRow> \r\n            <ReviewStar rating={rating} setRating={onRatingChange}/>\r\n                \r\n            <FormItem>\r\n                <textarea\r\n                    value={content}\r\n                    onChange={onChangeContent}\r\n                    placeholder=\"내용을 입력해 주세요\"                   \r\n                ></textarea>\r\n            </FormItem>\r\n            {/* 2. 결과 메시지에 따라 ResultModal을 렌더링 */}\r\n            {response && (\r\n                <ResultModal\r\n                    title={''}\r\n                    content={response.message}\r\n                    callbackFnc={closeModal}\r\n                />\r\n            )}\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default ReviewRegist;\r\n","import styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ReviewRegist from \"../../../../components/board/ReviewRegist\";\r\nconst StyledContainer = styled.div`\r\n    background-color:white;\r\n    border-radius:0.6rem;\r\n    margin:1.5rem;\r\n`;\r\nconst baseUrl = process.env.REACT_APP_BASE_URL;\r\nconst ReviewEdit = () => {\r\n    const { reviewNo, memberNo, farmNo } = useParams();\r\n    const [reviewDetail, setReviewDetail] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchReviewDetail = async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}/review/${reviewNo}`, {\r\n                    withCredentials: true,\r\n                });\r\n                setReviewDetail(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching inquiry detail:\", error);\r\n            }\r\n        };\r\n        fetchReviewDetail();\r\n    }, [reviewNo]);\r\n\r\n    return (\r\n        <StyledContainer>\r\n            {reviewDetail && (\r\n                <ReviewRegist\r\n                    content={reviewDetail.reviewContent}\r\n                    rating={reviewDetail.rating}\r\n                    reviewNo={reviewNo}\r\n                    isEdit={true}\r\n                    memberNo={memberNo}\r\n                    farmNo={farmNo}\r\n                />\r\n            )}\r\n        </StyledContainer>\r\n    );\r\n};\r\nexport default ReviewEdit;"],"names":["StarContainer","styled","div","_templateObject","_taggedTemplateLiteral","StyledStar","FaStar","_templateObject2","_ref","active","_ref2","size","StyledHalfStar","FaStarHalfAlt","_templateObject3","_ref3","_ref4","_ref5","rating","setRating","hoveredRating","setHoveredRating","useState","handleStarLeave","_jsx","children","map","value","isActive","isHalf","onMouseEnter","handleStarHover","onMouseLeave","onClick","handleStarClick","_jsxs","_Fragment","style","position","left","StyledContainer","FlexRow","FormItem","props","width","BackButton","IoArrowBackSharp","_templateObject4","baseUrl","process","initialRating","content","initialContent","reviewNo","isEdit","farmNo","useParams","memberNo","setContent","navigate","useNavigate","memberData","setMemberData","response","setResponse","memberMoveToRead","moveToMyReview","useCustomMove","useEffect","onRatingChange","useCallback","newRating","onChangeContent","e","target","getMemberNo","then","res","console","log","JSON","stringify","catch","error","handleBack","BoardTitle","name","handleRegisterOrUpdate","url","concat","method","axios","data","reviewContent","createdDate","Date","toISOString","isDeleted","message","type","className","ReviewStar","onChange","placeholder","ResultModal","title","callbackFnc","closeModal","ReviewEdit","reviewDetail","setReviewDetail","async","get","withCredentials","fetchReviewDetail","ReviewRegist"],"sourceRoot":""}