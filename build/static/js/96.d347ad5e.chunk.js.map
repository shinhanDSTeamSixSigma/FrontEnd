{"version":3,"file":"static/js/96.d347ad5e.chunk.js","mappings":"uJACA,MAAMA,EAAQC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8OAoBxB,EAPmBC,IAEXC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACAF,EAAAA,EAAAA,KAACN,EAAO,CAAAQ,SAAEH,EAAMI,Q,kDChBVR,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4HAEVC,GAAQA,EAAMK,QACbL,GAAQA,EAAMM,Q,8ICE7B,MAAMC,EAAkBX,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+IAO5BS,EAAQZ,EAAAA,GAAOC,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,8EAKlBW,EAAed,EAAAA,GAAOC,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,0EAKzBa,EAAWhB,EAAAA,GAAOC,IAAGgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,mJAQrBe,EAAclB,EAAAA,GAAOC,IAAGkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,oFAKxBiB,EAAiBpB,EAAAA,GAAOC,IAAGoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,ofAY3BmB,EAAWtB,EAAAA,GAAOC,IAAGsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,wDAKrBqB,EAAUC,wBAqDhB,QApDA,WACI,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,IAgBzC,OAdAC,EAAAA,EAAAA,YAAU,KACYC,WACd,IACI,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,GAADC,OAAIV,EAAO,oBAC3CG,EAAYI,EAASI,MACrBC,QAAQC,IAAIN,EAASI,KACzB,CAAE,MAAOG,GACLF,QAAQE,MAAM,4BAA6BA,EAC/C,GAGJC,EAAW,GACZ,KAGCC,EAAAA,EAAAA,MAAC7B,EAAe,CAAAJ,SAAA,EACZF,EAAAA,EAAAA,KAACO,EAAK,CAAAL,SAAC,8BACPF,EAAAA,EAAAA,KAACS,EAAY,CAAAP,SACRmB,EAASe,KAAI,CAACC,EAAMC,KACjBtC,EAAAA,EAAAA,KAACW,EAAQ,CAAAT,UAELiC,EAAAA,EAAAA,MAACI,EAAAA,KAAI,CAACC,GAAE,gBAAAX,OAAkBQ,EAAKI,YAAavC,SAAA,EACxCF,EAAAA,EAAAA,KAACe,EAAc,CAAAb,UACXF,EAAAA,EAAAA,KAAA,OACI0C,IAAG,GAAAb,OAAKV,EAAO,SAAAU,OAAQQ,EAAKM,OAC5BC,IAAI,YACJC,MAAO,CACHzC,MAAO,OACPC,OAAQ,OACRyC,UAAW,cAIvB9C,EAAAA,EAAAA,KAACa,EAAW,CAAAX,UACRF,EAAAA,EAAAA,KAAC+C,EAAAA,EAAW,CACR5C,KAAMkC,EAAKW,mBAAmBC,kBAGtCjD,EAAAA,EAAAA,KAACa,EAAW,CAAAX,UACRF,EAAAA,EAAAA,KAACiB,EAAQ,CAAAf,SAAEmC,EAAKa,iBApBbZ,SA4BnC,C","sources":["components/crop/CropCatebox.js","components/crop/CropImage.js","pages/member/dict/CropListPage.js"],"sourcesContent":["import styled from \"styled-components\";\r\nconst CateBox=styled.div`\r\n    background: #73A9AD;\r\n    border-radius:0.3rem;\r\n    width: 5em;\r\n    height: 2em;\r\n    color:white;\r\n    font-size:0.5em;\r\n    font-weight:400;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n`\r\nconst CropCatebox=(props)=>{\r\n    return(\r\n        <>\r\n        <CateBox>{props.name}</CateBox>\r\n        </>\r\n    );\r\n};\r\nexport default CropCatebox;","import styled from \"styled-components\";\r\nconst Image = styled.div`\r\n    // margin-right:1em;\r\n    width: ${(props)=>props.width};\r\n    height: ${(props)=>props.height};\r\n    border-radius:0.5rem;\r\n    background: #F9F7C9;\r\n`\r\nconst CropImage =({width,height}) =>{\r\n    return (\r\n        <>\r\n        <Image width={width} height={height}>이미지 컴포넌트</Image>\r\n        </>\r\n    );\r\n};\r\nexport default CropImage;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport CropImage from '../../../components/crop/CropImage';\r\nimport CropCatebox from '../../../components/crop/CropCatebox';\r\nconst StyledContainer = styled.div`\r\n    background-color: white;\r\n    font-size: 1em;\r\n    border-radius: 0.8rem;\r\n    margin: auto 1.5rem auto;\r\n    margin-top: 2rem;\r\n`;\r\nconst Title = styled.div`\r\n    font-size: 1em;\r\n    font-weight: 600;\r\n    margin-left: 1rem;\r\n`;\r\nconst CropItemList = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: 1em;\r\n`;\r\nconst CropItem = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 0.6em;\r\n    width: 33%;\r\n    height: 40%;\r\n`;\r\nconst ItemContent = styled.div`\r\n    margin-top: 0.3em;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\nconst ImageContainer = styled.div`\r\n    width: 25vw; /* viewport 너비의 28% */\r\n    height: 25vw; /* viewport 너비의 28% */\r\n    max-width: 200px; /* 최대 너비 */\r\n    max-height: 200px; /* 최대 높이 */\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden; /* 이미지가 컨테이너를 벗어나지 않도록 함 */\r\n    border-radius: 1em;\r\n`;\r\nconst CropName = styled.div`\r\n    font-size: 0.8em;\r\n    font-weight: 500;\r\n`;\r\n\r\nconst baseUrl = process.env.REACT_APP_BASE_URL;\r\nfunction CropListPage() {\r\n    const [cropList, setCropList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}/crop-dict/list`);\r\n                setCropList(response.data); // API에서 받아온 작물 목록을 상태에 업데이트\r\n                console.log(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching crop list:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <Title>작물정보</Title>\r\n            <CropItemList>\r\n                {cropList.map((crop, index) => (\r\n                    <CropItem key={index}>\r\n                        {/* Link 컴포넌트를 사용하여 해당 작물의 상세 페이지로 이동 */}\r\n                        <Link to={`/crop-detail/${crop.cropDictNo}`}>\r\n                            <ImageContainer>\r\n                                <img\r\n                                    src={`${baseUrl}/img/${crop.image}`}\r\n                                    alt=\"cropImage\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        height: '100%',\r\n                                        objectFit: 'cover',\r\n                                    }}\r\n                                />\r\n                            </ImageContainer>\r\n                            <ItemContent>\r\n                                <CropCatebox\r\n                                    name={crop.cropCategoryEntity.cropCateName}\r\n                                ></CropCatebox>\r\n                            </ItemContent>\r\n                            <ItemContent>\r\n                                <CropName>{crop.cropName}</CropName>\r\n                            </ItemContent>\r\n                        </Link>\r\n                    </CropItem>\r\n                ))}\r\n            </CropItemList>\r\n        </StyledContainer>\r\n    );\r\n}\r\n\r\nexport default CropListPage;\r\n"],"names":["CateBox","styled","div","_templateObject","_taggedTemplateLiteral","props","_jsx","_Fragment","children","name","width","height","StyledContainer","Title","_templateObject2","CropItemList","_templateObject3","CropItem","_templateObject4","ItemContent","_templateObject5","ImageContainer","_templateObject6","CropName","_templateObject7","baseUrl","process","cropList","setCropList","useState","useEffect","async","response","axios","get","concat","data","console","log","error","fetchData","_jsxs","map","crop","index","Link","to","cropDictNo","src","image","alt","style","objectFit","CropCatebox","cropCategoryEntity","cropCateName","cropName"],"sourceRoot":""}