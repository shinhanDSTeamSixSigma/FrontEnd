{"version":3,"file":"static/js/536.25f45d11.chunk.js","mappings":"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","sources":["components/crop/CropCatebox.js","components/crop/CropImage.js","pages/member/dict/CropDetailPage.js"],"sourcesContent":["import styled from \"styled-components\";\r\nconst CateBox=styled.div`\r\n    background: #73A9AD;\r\n    border-radius:0.3rem;\r\n    width: 5em;\r\n    height: 2em;\r\n    color:white;\r\n    font-size:0.5em;\r\n    font-weight:400;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n`\r\nconst CropCatebox=(props)=>{\r\n    return(\r\n        <>\r\n        <CateBox>{props.name}</CateBox>\r\n        </>\r\n    );\r\n};\r\nexport default CropCatebox;","import styled from \"styled-components\";\r\nconst Image = styled.div`\r\n    // margin-right:1em;\r\n    width: ${(props)=>props.width};\r\n    height: ${(props)=>props.height};\r\n    border-radius:0.5rem;\r\n    background: #F9F7C9;\r\n`\r\nconst CropImage =({width,height}) =>{\r\n    return (\r\n        <>\r\n        <Image width={width} height={height}>이미지 컴포넌트</Image>\r\n        </>\r\n    );\r\n};\r\nexport default CropImage;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { IoArrowBackSharp } from 'react-icons/io5';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport CropImage from '../../../components/crop/CropImage';\r\nimport CropCatebox from '../../../components/crop/CropCatebox';\r\nconst StyledContainer = styled.div`\r\n    background-color: white;\r\n    border-radius: 0.8rem;\r\n    margin: 1.5em;\r\n`;\r\nconst FlexRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n`;\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\nconst Title = styled.div`\r\n    font-size: 1.2rem;\r\n    font-weight: 500;\r\n    margin-right: 0.5em;\r\n`;\r\nconst GreenText = styled.div`\r\n    margin-top: 0.5em;\r\n    color: #4f6f52; /* 초록색 */\r\n    font-size: 0.7rem;\r\n    font-weight: 600;\r\n`;\r\nconst GrayText = styled.div`\r\n    color: #585858; /* 회색 */\r\n    font-size: 0.6rem;\r\n    margin-top: 0.3em;\r\n`;\r\nconst FlexColumn = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\nconst DivLine = styled.div`\r\n    background: #90c8ac;\r\n    width: 4rem;\r\n    height: 0.1em;\r\n    margin-top: 1.5rem;\r\n`;\r\nconst ImageContainer = styled.div`\r\n    width: 40vw; /* viewport 너비의 28% */\r\n    height: 40vw; /* viewport 너비의 28% */\r\n    max-width: 200px; /* 최대 너비 */\r\n    max-height: 200px; /* 최대 높이 */\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden; /* 이미지가 컨테이너를 벗어나지 않도록 함 */\r\n    border-radius: 1rem;\r\n`;\r\nconst SubTitle = styled.div`\r\n    font-size: 0.9rem;\r\n    font-weight: 500;\r\n    margin-right: 0.5rem;\r\n    margin-left: 0.2rem;\r\n    margin-top: 0.3rem;\r\n`;\r\nconst Content = styled.div`\r\n    font-size: 0.8rem;\r\n    color: #585858; /* 회색 */\r\n    margin-right: 0.7em;\r\n    margin-left: 0.2rem;\r\n    margin-top: 0.3em;\r\n`;\r\nconst SummaryText = styled.div`\r\n    margin-left: 0.8rem;\r\n`;\r\nconst BackButton = styled(IoArrowBackSharp)`\r\n    color: var(--color-textgrey);\r\n    margin-bottom: 0.5rem;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst baseUrl = process.env.REACT_APP_BASE_URL;\r\nconst CropDetailPage = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [cropDetail, setCropDetail] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchCropDetail = async () => {\r\n            try {\r\n                const response = await axios.get(\r\n                    `${baseUrl}/crop-dict/detail/${id}`,\r\n                );\r\n                setCropDetail(response.data); // API에서 받아온 작물 상세 정보를 상태에 업데이트\r\n                console.log(response.data);\r\n                console.log(id);\r\n            } catch (error) {\r\n                console.error('Error fetching crop detail:', error);\r\n            }\r\n        };\r\n\r\n        fetchCropDetail();\r\n    }, [id]); // cropDictNo가 변경될 때마다 실행\r\n\r\n    const getSeasons = (cropDetail) => {\r\n        const seaseons = [];\r\n        if (cropDetail.spring === 1) seaseons.push('봄');\r\n        if (cropDetail.summer === 1) seaseons.push('여름');\r\n        if (cropDetail.fall === 1) seaseons.push('가을');\r\n        if (cropDetail.winter === 1) seaseons.push('겨울');\r\n        return seaseons.join(', ');\r\n    };\r\n    const handleBack = () => {\r\n        navigate(-1);\r\n    };\r\n    return (\r\n        <>\r\n            <StyledContainer>\r\n                <BackButton onClick={handleBack} size=\"20\" />\r\n                <FlexRow>\r\n                    <ImageContainer>\r\n                        <img\r\n                            src={`${baseUrl}/img/${\r\n                                cropDetail && cropDetail.image\r\n                            }`}\r\n                            alt=\"cropImage\"\r\n                            style={{\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                objectFit: 'cover',\r\n                            }}\r\n                        />\r\n                    </ImageContainer>\r\n                    <SummaryText>\r\n                        <Container>\r\n                            <Title>{cropDetail && cropDetail.cropName}</Title>\r\n                            <CropCatebox\r\n                                name={\r\n                                    cropDetail &&\r\n                                    cropDetail.cropCategoryEntity.cropCateName\r\n                                }\r\n                            ></CropCatebox>\r\n                        </Container>\r\n                        <GreenText>\r\n                            {cropDetail && cropDetail.summary}\r\n                        </GreenText>\r\n                        <GrayText>\r\n                            제철시기 : {cropDetail && getSeasons(cropDetail)}\r\n                        </GrayText>\r\n                        <GrayText>\r\n                            난이도 : {cropDetail && cropDetail.summary}\r\n                        </GrayText>\r\n                        <GrayText>\r\n                            재배기간 : {cropDetail && cropDetail.term}일\r\n                        </GrayText>\r\n                        <GrayText>\r\n                            발아온도 : {cropDetail && cropDetail.lowTemp} ~{' '}\r\n                            {cropDetail && cropDetail.highTemp} 도\r\n                        </GrayText>\r\n                    </SummaryText>\r\n                </FlexRow>\r\n                <FlexColumn>\r\n                    <DivLine />\r\n                    <SubTitle>작물설명</SubTitle>\r\n                    {cropDetail &&\r\n                        cropDetail.cropContent\r\n                            .split('▷')\r\n                            .map((paragraph, index) => (\r\n                                <Content key={index}>{paragraph}</Content>\r\n                            ))}\r\n                    <DivLine />\r\n                    <SubTitle>재배팁</SubTitle>\r\n                    {cropDetail &&\r\n                        cropDetail.tip\r\n                            .split('▷')\r\n                            .map((tip, index) => (\r\n                                <Content key={index}>{tip}</Content>\r\n                            ))}\r\n                    <DivLine />\r\n                    <SubTitle>효과</SubTitle>\r\n                    <Content>{cropDetail && cropDetail.effect}</Content>\r\n                    <DivLine />\r\n                    <SubTitle>주요성분</SubTitle>\r\n                    <Content>{cropDetail && cropDetail.nutrient}</Content>\r\n                </FlexColumn>\r\n            </StyledContainer>\r\n        </>\r\n    );\r\n};\r\nexport default CropDetailPage;\r\n"],"names":["CateBox","styled","div","_templateObject","_taggedTemplateLiteral","props","_jsx","_Fragment","children","name","width","height","StyledContainer","FlexRow","_templateObject2","Container","_templateObject3","Title","_templateObject4","GreenText","_templateObject5","GrayText","_templateObject6","FlexColumn","_templateObject7","DivLine","_templateObject8","ImageContainer","_templateObject9","SubTitle","_templateObject10","Content","_templateObject11","SummaryText","_templateObject12","BackButton","IoArrowBackSharp","_templateObject13","baseUrl","process","CropDetailPage","id","useParams","navigate","useNavigate","cropDetail","setCropDetail","useState","useEffect","async","response","axios","get","concat","data","console","log","error","fetchCropDetail","_jsxs","onClick","handleBack","size","src","image","alt","style","objectFit","cropName","CropCatebox","cropCategoryEntity","cropCateName","summary","seaseons","spring","push","summer","fall","winter","join","getSeasons","term","lowTemp","highTemp","cropContent","split","map","paragraph","index","tip","effect","nutrient"],"sourceRoot":""}