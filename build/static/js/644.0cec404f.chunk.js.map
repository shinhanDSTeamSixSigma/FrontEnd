{"version":3,"file":"static/js/644.0cec404f.chunk.js","mappings":"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","sources":["components/StyledBody.js","components/TitleDivisionLine.js","pages/member/mypage/streaming/CropStreamingPage.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst BodyBody = styled.body`\r\n    color: black;\r\n    background-color: #ffffff;\r\n    font-size: 20px;\r\n    margin-top: 2rem;\r\n    margin-left: 1.5rem;\r\n    margin-right: 1.5rem;\r\n    padding-bottom: 1rem;\r\n`;\r\n\r\nexport default function StyledBody({ children }) {\r\n    return (\r\n        <>\r\n            <BodyBody>{children}</BodyBody>\r\n        </>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Division = styled.div`\r\n  border-top: 0.2rem solid #90c8ac;\r\n`;\r\n\r\nexport default function TitleDivisionLine() {\r\n  return (\r\n    <>\r\n      <Division></Division>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { getMemberNo } from '../../../../api/farmApi';\r\nimport Button from '../../../../components/Button';\r\nimport StyledBody from '../../../../components/StyledBody';\r\nimport StyledHeader from '../../../../components/StyledHeader';\r\nimport TitleDivisionLine from '../../../../components/TitleDivisionLine';\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = process.env.REACT_APP_BASE_URL;\r\nvar streamingaddr = '';\r\n\r\nconst calculateDaysSince = (startDate) => {\r\n    const oneDay = 24 * 60 * 60 * 1000;\r\n    const currentDate = new Date();\r\n    const daysDiff = Math.round((currentDate - new Date(startDate)) / oneDay);\r\n    return daysDiff;\r\n};\r\n\r\nfunction streamingCaptureBtnOnclicked() {\r\n    console.log('capture activate');\r\n    let canvas = document.createElement('canvas');\r\n    canvas.width = 600;\r\n    canvas.height = 800;\r\n    document.body.appendChild(canvas);\r\n    let context = canvas.getContext('2d');\r\n    let captureBtn = document.getElementById('captureBtn');\r\n    let streamingImg = document.getElementById('streamingImg');\r\n    let hiidenbtn = document.getElementById('hiddenBtn');\r\n    streamingImg.crossOrigin = 'Anonymous';\r\n    try {\r\n        context.drawImage(streamingImg, 0, 0);\r\n        let dataURL = canvas.toDataURL('image/jpeg');\r\n        hiidenbtn.href = dataURL;\r\n        let d = new Date();\r\n        hiidenbtn.download =\r\n            d.getFullYear() +\r\n            ('0' + (d.getMonth() + 1)).slice(-2) +\r\n            ('0' + d.getDate()).slice(-2) +\r\n            ('0' + d.getHours()).slice(-2) +\r\n            ('0' + d.getMinutes()).slice(-2) +\r\n            ('0' + d.getSeconds()).slice(-2) +\r\n            '.jpg';\r\n    } catch (e) {\r\n        console.error(e);\r\n        alert('캡쳐에 문제가 발생했습니다!');\r\n    }\r\n    canvas.parentNode.removeChild(canvas);\r\n}\r\n\r\nfunction waterSignal() {\r\n    fetch(streamingaddr + ':82/water', { method: 'POST', body: 'WATER' })\r\n        .then((response) => console.log('response:', response))\r\n        .catch((error) => console.log('error:', error));\r\n    alert('물 시그널 전송');\r\n}\r\n\r\nexport default function CropStreamingPage({}) {\r\n    const location = useLocation();\r\n    const crop = location.state.crop;\r\n    const cropNickname = location.state.cropNickname;\r\n    const buyDate = location.state.buyDate;\r\n    const [cropData, setCropData] = useState([]);\r\n    let cropNicknameData = '';\r\n    let cropBuyDate = '';\r\n    let cropNo = 0;\r\n    if (crop != null) {\r\n        cropNicknameData = crop.cropNickname;\r\n        cropBuyDate = crop.buyDate;\r\n        streamingaddr = crop.streamingAddr;\r\n        cropNo = crop.cropNo;\r\n    } else {\r\n        cropNicknameData = cropNickname;\r\n        cropBuyDate = buyDate;\r\n    }\r\n    console.log(crop);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get(\r\n                    `${baseUrl}/mypage/streaming/${cropNo}`,\r\n                    {\r\n                        withCredentials: true,\r\n                    },\r\n                );\r\n                setCropData(response.data); // API에서 받아온 작물 목록을 상태에 업데이트\r\n                console.log(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching crop list:', error);\r\n            }\r\n        };\r\n\r\n        fetchData(); // 데이터 가져오기 함수 호출\r\n    }, []);\r\n\r\n    // const farmNo = crop.farmEntity.farmNo;\r\n    // const navigate = useNavigate();\r\n\r\n    // const handlePayment2 = () => {\r\n    //     // 결제하기 버튼 클릭 시 실행되는 함수\r\n    //     navigate(`/farm/pay/${farmNo}`, { state: crop }); // 페이지 이동 및 상태 전달\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     handlePayment2();\r\n    // }, []);\r\n\r\n    return (\r\n        <>\r\n            <StyledHeader>\r\n                <div className=\"flex justify-between items-center\">\r\n                    <div>\r\n                        <span className=\"text-2xl font-black\">\r\n                            {cropNicknameData}\r\n                        </span>\r\n                        는 지금?\r\n                    </div>\r\n                    <div className=\"text-sm pt-2\">\r\n                        함께한지 {calculateDaysSince(cropBuyDate)} 일째\r\n                    </div>\r\n                </div>\r\n            </StyledHeader>\r\n            <div className=\"border mt-2 border-[#90C8AC]\"></div>\r\n            <TitleDivisionLine />\r\n            <div style={{ marginBottom: '5rem' }}></div>\r\n            <StyledBody>\r\n                <div\r\n                    className=\"d-flex h-72\"\r\n                    style={{ justifyContent: 'center' }}\r\n                >\r\n                    <img\r\n                        id=\"streamingImg\"\r\n                        src={streamingaddr + `:81/stream`}\r\n                        alt=\"streaming\"\r\n                        crossOrigin=\"anonymous\"\r\n                        className=\"center\"\r\n                        width={'450rem'}\r\n                    ></img>\r\n                </div>\r\n                <div className=\"flex justify-evenly mt-8 \">\r\n                    <div\r\n                        id=\"streaming_section\"\r\n                        className=\" text-center flex items-center\"\r\n                    >\r\n                        <img\r\n                            src={process.env.PUBLIC_URL + `/img/Ellipse1.png`}\r\n                            alt=\"\"\r\n                        />\r\n                        <span className=\"ml-2\">{cropData.thomer}</span> °⁣C\r\n                    </div>\r\n                    <div className=\" text-center flex items-center\">\r\n                        <img\r\n                            src={process.env.PUBLIC_URL + `/img/Ellipse2.png`}\r\n                            alt=\"\"\r\n                        />\r\n                        <span className=\"ml-2\">{cropData.soilHumid}</span>%\r\n                    </div>\r\n                    <div className=\" text-center flex items-center\">\r\n                        <img\r\n                            src={process.env.PUBLIC_URL + `/img/Ellipse3.png`}\r\n                            alt=\"\"\r\n                        />\r\n                        <span className=\"ml-2\">{cropData.lumen}</span>lx\r\n                    </div>\r\n                </div>\r\n                <section className=\"d-flex justify-content-center mt-8\">\r\n                    <Button\r\n                        id=\"captureBtn\"\r\n                        className=\"d-flex justify-content-center mt-8\"\r\n                        name={'캡쳐하기'}\r\n                        widthHeight={'w-40 h-11'}\r\n                        captureButtonEffect={() =>\r\n                            streamingCaptureBtnOnclicked()\r\n                        }\r\n                    />\r\n                    <div style={{ width: '2rem' }}></div>\r\n                    {/* <Button\r\n                        className=\"d-flex justify-content-center mt-8\"\r\n                        name={'영양제 주기'}\r\n                        widthHeight={'w-40 h-11'}\r\n                        //onClick={handlePayment2(farmNo)}\r\n                    /> */}\r\n                    <div style={{ width: '2rem' }}></div>\r\n                    <Button\r\n                        className=\"d-flex justify-content-center mt-8\"\r\n                        name={'물주기'}\r\n                        widthHeight={'w-40 h-11'}\r\n                        captureButtonEffect={() => waterSignal()}\r\n                    />\r\n                    <button id=\"hiddenBtn\" width=\"0rem\" height=\"0rem\" />\r\n                </section>\r\n            </StyledBody>\r\n        </>\r\n    );\r\n}\r\n"],"names":["BodyBody","styled","body","_templateObject","_taggedTemplateLiteral","StyledBody","_ref","children","_jsx","_Fragment","Division","div","TitleDivisionLine","baseUrl","process","streamingaddr","calculateDaysSince","startDate","currentDate","Date","Math","round","CropStreamingPage","location","useLocation","crop","state","cropNickname","buyDate","cropData","setCropData","useState","cropNicknameData","cropBuyDate","cropNo","streamingAddr","console","log","useEffect","async","response","axios","get","concat","withCredentials","data","error","fetchData","_jsxs","StyledHeader","className","style","marginBottom","justifyContent","id","src","alt","crossOrigin","width","thomer","soilHumid","lumen","Button","name","widthHeight","captureButtonEffect","canvas","document","createElement","height","appendChild","context","getContext","streamingImg","getElementById","hiidenbtn","drawImage","dataURL","toDataURL","href","d","download","getFullYear","getMonth","slice","getDate","getHours","getMinutes","getSeconds","e","alert","parentNode","removeChild","streamingCaptureBtnOnclicked","fetch","method","then","catch"],"sourceRoot":""}